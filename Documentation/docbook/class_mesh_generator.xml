<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_mesh_generator">
<title>MeshGenerator class Reference</title>
<para>
    <programlisting>#include <link linkend="_mesh_generator_8h">&lt;MeshGenerator.h&gt;</link></programlisting>
</para>
        <section>
            <title>Public Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>parallel::distributed::Triangulation&lt; 3 &gt;::active_cell_iterator cell</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>parallel::distributed::Triangulation&lt; 3 &gt;::active_cell_iterator endc</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>SpaceTransformation * ct</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int Layers</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Point&lt; 3 &gt; origin</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Point&lt; 3 &gt; p1</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Point&lt; 3 &gt; p2</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std_cxx11::array&lt; Tensor&lt; 1, 3 &gt;, 3 &gt; edges</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::vector&lt; unsigned int &gt; subs</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double z_min</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double z_max</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_mesh_generator_1a914bb382dcc6deb88b0e982e26a9e558">MeshGenerator</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_mesh_generator_1aba6e7fa0a97d56791ffe4e85d6a7b0db">MeshGenerator</link> (
<link linkend="class_space_transformation">SpaceTransformation</link> &amp; in_ct)<para><emphasis>Since objects of this type mainly depend on the measures and the selected
shape, the constructor only requires a space transformation (which
determines, which points are to be considered inside the waveguide etc.)</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="class_mesh_generator_1a8bcccd2297e10b7047c93307bdd11870">~MeshGenerator</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_mesh_generator_1a70b9f7d14e1c3d069fb7be4c05e3393f">refine_global</link> (
parallel::distributed::Triangulation&lt; 3 &gt; * in_tria, unsigned int times)<para><emphasis>This function is intended to execute a global refinement of the mesh.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_mesh_generator_1ab88a60fd230e7ea64c7d0b4e002182c2">refine_internal</link> (
parallel::distributed::Triangulation&lt; 3 &gt; * in_tria, unsigned int times)<para><emphasis>This function is intended to execute an internal refinement of the mesh.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_mesh_generator_1a33892bcac7fbd19cc0ca6e2a23e9d31e">refine_proximity</link> (
parallel::distributed::Triangulation&lt; 3 &gt; * in_tria, unsigned int times, double factor)<para><emphasis>This function is intended to execute a refinement inside and near the
waveguide boundary.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual bool <link linkend="class_mesh_generator_1a571dc7c36f29edbdb9ea40e5832ba851">math_coordinate_in_waveguide</link> (
Point&lt; 3 &gt; position)<para><emphasis>This function checks if the given coordinate is inside the waveguide or
not.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual bool <link linkend="class_mesh_generator_1a0fbcf56122b8377b04dc31d4f355830c">phys_coordinate_in_waveguide</link> (
Point&lt; 3 &gt; position)<para><emphasis>This function checks if the given coordinate is inside the waveguide or
not.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual void <link linkend="class_mesh_generator_1aa3a673744db2c5ad3e6fae65af4afb6b">prepare_triangulation</link> (
parallel::distributed::Triangulation&lt; 3 &gt; * in_tria)<para><emphasis>This function takes a triangulation object and prepares it for the further
computations.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>This is an interface for all the mesh generators in the project describing its role and functionality. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>Since different shapes of waveguides (in the <equation><title>form_37</title>$xz$</equation>-plane) are interesting in application settings, we wish to introduce a mechanism to model this fact. Therefore all functionality related to the shape of the waveguide are encapsulated of specific objects which do all the heavy lifting. The problem si the fact that a rectangular geometry has more dofs then a square or circular one (radius versus width and height). This has implications on the space transformation and the optimization scheme and earlier versions were running the risk of getting too flawed by implementing loads of different case models over and over again. This structure leads to a higher readability of the code and reduces its error-proneness. <formalpara><title>Author: </title>

<para>Pascal Kraft </para>
</formalpara>
<formalpara><title>Date: </title>

<para>28.11.2016 </para>
</formalpara>
</para>
                <para>Definition at line 32 of file MeshGenerator.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>MeshGenerator.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_mesh_generator_1a914bb382dcc6deb88b0e982e26a9e558">
                <title>MeshGenerator::MeshGenerator ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_mesh_generator_1aba6e7fa0a97d56791ffe4e85d6a7b0db">
                <title>MeshGenerator::MeshGenerator (SpaceTransformation &amp;in_ct)</title> <emphasis>Since objects of this type mainly depend on the measures and the selected
shape, the constructor only requires a space transformation (which
determines, which points are to be considered inside the waveguide etc.)</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in_ct</entry>
                                <entry>
<para>a Space Transformation which whill be stored internally for later use. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_mesh_generator_1a8bcccd2297e10b7047c93307bdd11870">
                <title>MeshGenerator::~MeshGenerator ()=0</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_mesh_generator_1a70b9f7d14e1c3d069fb7be4c05e3393f">
                <title>virtual void MeshGenerator::refine_global (parallel::distributed::Triangulation&lt; 3 &gt; *in_tria, unsigned int times)=0</title> <emphasis>This function is intended to execute a global refinement of the mesh.</emphasis>
                
<para>This means that every cell will be refined in every direction (effectively multiplying the number of DOFs by 8). This version is the most expensive refinement possible and should be used with caution. 
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>times</entry>
                                <entry>
<para>Number of refinement steps to be performed (gives us a multiplication of the number of degrees of freedom by <equation><title>form_38</title>$8^{times}$</equation>. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_mesh_generator_1ab88a60fd230e7ea64c7d0b4e002182c2">
                <title>virtual void MeshGenerator::refine_internal (parallel::distributed::Triangulation&lt; 3 &gt; *in_tria, unsigned int times)=0</title> <emphasis>This function is intended to execute an internal refinement of the mesh.</emphasis>
                
<para>This means that every cell inside the waveguide will be refined in every direction. This method is rather cheap and only refines where the field is strong, however, the mesh outside the waveguide should not be too coarse to reduce numerical errors. 
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>times</entry>
                                <entry>
<para>Number of refinement steps to be performed. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_mesh_generator_1a33892bcac7fbd19cc0ca6e2a23e9d31e">
                <title>virtual void MeshGenerator::refine_proximity (parallel::distributed::Triangulation&lt; 3 &gt; *in_tria, unsigned int times, double factor)=0</title> <emphasis>This function is intended to execute a refinement inside and near the
waveguide boundary.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>times</entry>
                                <entry>
<para>Number of refinement steps to be performed. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_mesh_generator_1a571dc7c36f29edbdb9ea40e5832ba851">
                <title>virtual bool MeshGenerator::math_coordinate_in_waveguide (Point&lt; 3 &gt; position) const =0</title> <emphasis>This function checks if the given coordinate is inside the waveguide or
not.</emphasis>
                
<para>The naming convention of physical and mathematical system find application. In this version, the waveguide has been transformed and the check for a tubal waveguide for example only checks if the radius of a given vector is below the average of input and output radius.  position This value gives us the location to check for. </para>

            </section>
            <section xml:id="class_mesh_generator_1a0fbcf56122b8377b04dc31d4f355830c">
                <title>virtual bool MeshGenerator::phys_coordinate_in_waveguide (Point&lt; 3 &gt; position) const =0</title> <emphasis>This function checks if the given coordinate is inside the waveguide or
not.</emphasis>
                
<para>The naming convention of physical and mathematical system find application. In this version, the waveguide is bent. If we are using a space transformation <equation><title>form_39</title>$f$</equation> then this function is equal to math_coordinate_in_waveguide(f(x,y,z)).  position This value gives us the location to check for. </para>

            </section>
            <section xml:id="class_mesh_generator_1aa3a673744db2c5ad3e6fae65af4afb6b">
                <title>virtual void MeshGenerator::prepare_triangulation (parallel::distributed::Triangulation&lt; 3 &gt; *in_tria)=0</title> <emphasis>This function takes a triangulation object and prepares it for the further
computations.</emphasis>
                
<para>It is intended to encapsulate all related work and is explicitely not const. 
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in_tria</entry>
                                <entry>
<para>The triangulation that is supposed to be prepared. All further information is derived from the parameter file and not given by parameters. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
</section>
