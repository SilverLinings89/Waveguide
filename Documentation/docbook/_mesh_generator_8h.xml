<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mesh_generator_8h">
    <title>MeshGenerator.h File Reference</title>
    <programlisting>#include &lt;deal.II/base/point.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/base/tensor.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/distributed/tria.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/grid/tria_boundary_lib.h&gt;</programlisting>
    <programlisting>#include &quot;../Helpers/Parameters.h&quot;</programlisting>
    <programlisting>#include &quot;../SpaceTransformations/SpaceTransformation.h&quot;</programlisting>
    <programlisting>#include &lt;deal.II/base/std_cxx11/array.h&gt;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_mesh_generator">MeshGenerator</link></para>
<para><emphasis>This is an interface for all the mesh generators in the project
describing its role and functionality.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/MeshGenerators/MeshGenerator.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;MESHGENERATOR_H_</emphasis>
2 <emphasis class="preprocessor">#define&#32;MESHGENERATOR_H_</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/point.h&gt;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/tensor.h&gt;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&lt;deal.II/distributed/tria.h&gt;</emphasis>
7 <emphasis class="preprocessor">#include&#32;&lt;deal.II/grid/tria_boundary_lib.h&gt;</emphasis>
8 <emphasis class="preprocessor">#include&#32;&quot;../Helpers/Parameters.h&quot;</emphasis>
9 <emphasis class="preprocessor">#include&#32;&quot;../SpaceTransformations/SpaceTransformation.h&quot;</emphasis>
10 
11 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/std_cxx11/array.h&gt;</emphasis>
12 
13 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
14 <emphasis class="comment"></emphasis>
15 <emphasis class="comment">/**</emphasis>
16 <emphasis class="comment">&#32;*&#32;\class&#32;MeshGenerator</emphasis>
17 <emphasis class="comment">&#32;*&#32;\brief&#32;This&#32;is&#32;an&#32;interface&#32;for&#32;all&#32;the&#32;mesh&#32;generators&#32;in&#32;the&#32;project</emphasis>
18 <emphasis class="comment">&#32;*&#32;describing&#32;its&#32;role&#32;and&#32;functionality.</emphasis>
19 <emphasis class="comment">&#32;*</emphasis>
20 <emphasis class="comment">&#32;*&#32;Since&#32;different&#32;shapes&#32;of&#32;waveguides&#32;(in&#32;the&#32;\f$xz\f$-plane)&#32;are&#32;interesting</emphasis>
21 <emphasis class="comment">&#32;*&#32;in&#32;application&#32;settings,&#32;we&#32;wish&#32;to&#32;introduce&#32;a&#32;mechanism&#32;to&#32;model&#32;this&#32;fact.</emphasis>
22 <emphasis class="comment">&#32;*&#32;Therefore&#32;all&#32;functionality&#32;related&#32;to&#32;the&#32;shape&#32;of&#32;the&#32;waveguide&#32;are</emphasis>
23 <emphasis class="comment">&#32;*&#32;encapsulated&#32;of&#32;specific&#32;objects&#32;which&#32;do&#32;all&#32;the&#32;heavy&#32;lifting.&#32;The&#32;problem</emphasis>
24 <emphasis class="comment">&#32;*&#32;si&#32;the&#32;fact&#32;that&#32;a&#32;rectangular&#32;geometry&#32;has&#32;more&#32;dofs&#32;then&#32;a&#32;square&#32;or</emphasis>
25 <emphasis class="comment">&#32;*&#32;circular&#32;one&#32;(radius&#32;versus&#32;width&#32;and&#32;height).&#32;This&#32;has&#32;implications&#32;on&#32;the</emphasis>
26 <emphasis class="comment">&#32;*&#32;space&#32;transformation&#32;and&#32;the&#32;optimization&#32;scheme&#32;and&#32;earlier&#32;versions&#32;were</emphasis>
27 <emphasis class="comment">&#32;*&#32;running&#32;the&#32;risk&#32;of&#32;getting&#32;too&#32;flawed&#32;by&#32;implementing&#32;loads&#32;of&#32;different</emphasis>
28 <emphasis class="comment">&#32;*&#32;case&#32;models&#32;over&#32;and&#32;over&#32;again.&#32;This&#32;structure&#32;leads&#32;to&#32;a&#32;higher&#32;readability</emphasis>
29 <emphasis class="comment">&#32;*&#32;of&#32;the&#32;code&#32;and&#32;reduces&#32;its&#32;error-proneness.&#32;\author&#32;Pascal&#32;Kraft</emphasis>
30 <emphasis class="comment">&#32;*&#32;\date&#32;28.11.2016</emphasis>
31 <emphasis class="comment">&#32;*/</emphasis>
<link linkend="class_mesh_generator">32 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_mesh_generator">MeshGenerator</link>&#32;{
33 &#32;<emphasis class="keyword">public</emphasis>:
34 &#32;&#32;parallel::distributed::Triangulation&lt;3&gt;::active_cell_iterator&#32;cell,&#32;endc;
35 &#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;ct;
36 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;Layers;
37 &#32;&#32;Point&lt;3&gt;&#32;origin,&#32;p1,&#32;p2;
38 &#32;&#32;std_cxx11::array&lt;Tensor&lt;1,&#32;3&gt;,&#32;3&gt;&#32;edges;
39 &#32;&#32;std::vector&lt;unsigned&#32;int&gt;&#32;subs;
40 
41 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;z_min,&#32;z_max;
42 
43 &#32;&#32;<link linkend="class_mesh_generator">MeshGenerator</link>();
44 <emphasis class="comment"></emphasis>
45 <emphasis class="comment">&#32;&#32;/**</emphasis>
46 <emphasis class="comment">&#32;&#32;&#32;*&#32;Since&#32;objects&#32;of&#32;this&#32;type&#32;mainly&#32;depend&#32;on&#32;the&#32;measures&#32;and&#32;the&#32;selected</emphasis>
47 <emphasis class="comment">&#32;&#32;&#32;*&#32;shape,&#32;the&#32;constructor&#32;only&#32;requires&#32;a&#32;space&#32;transformation&#32;(which</emphasis>
48 <emphasis class="comment">&#32;&#32;&#32;*&#32;determines,&#32;which&#32;points&#32;are&#32;to&#32;be&#32;considered&#32;inside&#32;the&#32;waveguide&#32;etc.)</emphasis>
49 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;in_ct&#32;a&#32;Space&#32;Transformation&#32;which&#32;whill&#32;be&#32;stored&#32;internally&#32;for</emphasis>
50 <emphasis class="comment">&#32;&#32;&#32;*&#32;later&#32;use.</emphasis>
51 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
52 &#32;&#32;<link linkend="class_mesh_generator">MeshGenerator</link>(<link linkend="class_space_transformation">SpaceTransformation</link>&amp;&#32;in_ct);
53 
54 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;~<link linkend="class_mesh_generator">MeshGenerator</link>()&#32;=&#32;0;
55 <emphasis class="comment"></emphasis>
56 <emphasis class="comment">&#32;&#32;/**</emphasis>
57 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;intended&#32;to&#32;execute&#32;a&#32;global&#32;refinement&#32;of&#32;the&#32;mesh.&#32;This</emphasis>
58 <emphasis class="comment">&#32;&#32;&#32;*&#32;means&#32;that&#32;every&#32;cell&#32;will&#32;be&#32;refined&#32;in&#32;every&#32;direction&#32;(effectively</emphasis>
59 <emphasis class="comment">&#32;&#32;&#32;*&#32;multiplying&#32;the&#32;number&#32;of&#32;DOFs&#32;by&#32;8).&#32;This&#32;version&#32;is&#32;the&#32;most&#32;expensive</emphasis>
60 <emphasis class="comment">&#32;&#32;&#32;*&#32;refinement&#32;possible&#32;and&#32;should&#32;be&#32;used&#32;with&#32;caution.&#32;\param&#32;times&#32;Number&#32;of</emphasis>
61 <emphasis class="comment">&#32;&#32;&#32;*&#32;refinement&#32;steps&#32;to&#32;be&#32;performed&#32;(gives&#32;us&#32;a&#32;multiplication&#32;of&#32;the&#32;number</emphasis>
62 <emphasis class="comment">&#32;&#32;&#32;*&#32;of&#32;degrees&#32;of&#32;freedom&#32;by&#32;\f$8^{times}\f$.</emphasis>
63 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
64 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;refine_global(parallel::distributed::Triangulation&lt;3&gt;*&#32;in_tria,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;times)&#32;=&#32;0;
66 <emphasis class="comment"></emphasis>
67 <emphasis class="comment">&#32;&#32;/**</emphasis>
68 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;intended&#32;to&#32;execute&#32;an&#32;internal&#32;refinement&#32;of&#32;the&#32;mesh.</emphasis>
69 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;means&#32;that&#32;every&#32;cell&#32;inside&#32;the&#32;waveguide&#32;will&#32;be&#32;refined&#32;in&#32;every</emphasis>
70 <emphasis class="comment">&#32;&#32;&#32;*&#32;direction.&#32;This&#32;method&#32;is&#32;rather&#32;cheap&#32;and&#32;only&#32;refines&#32;where&#32;the&#32;field&#32;is</emphasis>
71 <emphasis class="comment">&#32;&#32;&#32;*&#32;strong,&#32;however,&#32;the&#32;mesh&#32;outside&#32;the&#32;waveguide&#32;should&#32;not&#32;be&#32;too&#32;coarse&#32;to</emphasis>
72 <emphasis class="comment">&#32;&#32;&#32;*&#32;reduce&#32;numerical&#32;errors.&#32;\param&#32;times&#32;Number&#32;of&#32;refinement&#32;steps&#32;to&#32;be</emphasis>
73 <emphasis class="comment">&#32;&#32;&#32;*&#32;performed.</emphasis>
74 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
75 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;refine_internal(parallel::distributed::Triangulation&lt;3&gt;*&#32;in_tria,
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;times)&#32;=&#32;0;
77 <emphasis class="comment"></emphasis>
78 <emphasis class="comment">&#32;&#32;/**</emphasis>
79 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;intended&#32;to&#32;execute&#32;a&#32;refinement&#32;inside&#32;and&#32;near&#32;the</emphasis>
80 <emphasis class="comment">&#32;&#32;&#32;*&#32;waveguide&#32;boundary.&#32;\param&#32;times&#32;Number&#32;of&#32;refinement&#32;steps&#32;to&#32;be</emphasis>
81 <emphasis class="comment">&#32;&#32;&#32;*&#32;performed.</emphasis>
82 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
83 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;refine_proximity(
84 &#32;&#32;&#32;&#32;&#32;&#32;parallel::distributed::Triangulation&lt;3&gt;*&#32;in_tria,&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;times,
85 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;factor)&#32;=&#32;0;
86 <emphasis class="comment"></emphasis>
87 <emphasis class="comment">&#32;&#32;/**</emphasis>
88 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;checks&#32;if&#32;the&#32;given&#32;coordinate&#32;is&#32;inside&#32;the&#32;waveguide&#32;or</emphasis>
89 <emphasis class="comment">&#32;&#32;&#32;*&#32;not.&#32;The&#32;naming&#32;convention&#32;of&#32;physical&#32;and&#32;mathematical&#32;system&#32;find</emphasis>
90 <emphasis class="comment">&#32;&#32;&#32;*&#32;application.&#32;In&#32;this&#32;version,&#32;the&#32;waveguide&#32;has&#32;been&#32;transformed&#32;and&#32;the</emphasis>
91 <emphasis class="comment">&#32;&#32;&#32;*&#32;check&#32;for&#32;a&#32;tubal&#32;waveguide&#32;for&#32;example&#32;only&#32;checks&#32;if&#32;the&#32;radius&#32;of&#32;a</emphasis>
92 <emphasis class="comment">&#32;&#32;&#32;*&#32;given&#32;vector&#32;is&#32;below&#32;the&#32;average&#32;of&#32;input&#32;and&#32;output&#32;radius.&#32;\params</emphasis>
93 <emphasis class="comment">&#32;&#32;&#32;*&#32;position&#32;This&#32;value&#32;gives&#32;us&#32;the&#32;location&#32;to&#32;check&#32;for.</emphasis>
94 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
95 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;math_coordinate_in_waveguide(Point&lt;3&gt;&#32;position)&#32;<emphasis class="keyword">const</emphasis>&#32;=&#32;0;
96 <emphasis class="comment"></emphasis>
97 <emphasis class="comment">&#32;&#32;/**</emphasis>
98 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;checks&#32;if&#32;the&#32;given&#32;coordinate&#32;is&#32;inside&#32;the&#32;waveguide&#32;or</emphasis>
99 <emphasis class="comment">&#32;&#32;&#32;*&#32;not.&#32;The&#32;naming&#32;convention&#32;of&#32;physical&#32;and&#32;mathematical&#32;system&#32;find</emphasis>
100 <emphasis class="comment">&#32;&#32;&#32;*&#32;application.&#32;In&#32;this&#32;version,&#32;the&#32;waveguide&#32;is&#32;bent.&#32;If&#32;we&#32;are&#32;using&#32;a</emphasis>
101 <emphasis class="comment">&#32;&#32;&#32;*&#32;space&#32;transformation&#32;\f$f\f$&#32;then&#32;this&#32;function&#32;is&#32;equal&#32;to</emphasis>
102 <emphasis class="comment">&#32;&#32;&#32;*&#32;math_coordinate_in_waveguide(f(x,y,z)).&#32;\params&#32;position&#32;This&#32;value&#32;gives</emphasis>
103 <emphasis class="comment">&#32;&#32;&#32;*&#32;us&#32;the&#32;location&#32;to&#32;check&#32;for.</emphasis>
104 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
105 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;phys_coordinate_in_waveguide(Point&lt;3&gt;&#32;position)&#32;<emphasis class="keyword">const</emphasis>&#32;=&#32;0;
106 <emphasis class="comment"></emphasis>
107 <emphasis class="comment">&#32;&#32;/**</emphasis>
108 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;takes&#32;a&#32;triangulation&#32;object&#32;and&#32;prepares&#32;it&#32;for&#32;the&#32;further</emphasis>
109 <emphasis class="comment">&#32;&#32;&#32;*&#32;computations.&#32;It&#32;is&#32;intended&#32;to&#32;encapsulate&#32;all&#32;related&#32;work&#32;and&#32;is</emphasis>
110 <emphasis class="comment">&#32;&#32;&#32;*&#32;explicitely&#32;not&#32;const.&#32;\param&#32;in_tria&#32;The&#32;triangulation&#32;that&#32;is&#32;supposed&#32;to</emphasis>
111 <emphasis class="comment">&#32;&#32;&#32;*&#32;be&#32;prepared.&#32;All&#32;further&#32;information&#32;is&#32;derived&#32;from&#32;the&#32;parameter&#32;file&#32;and</emphasis>
112 <emphasis class="comment">&#32;&#32;&#32;*&#32;not&#32;given&#32;by&#32;parameters.</emphasis>
113 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
114 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;prepare_triangulation(
115 &#32;&#32;&#32;&#32;&#32;&#32;parallel::distributed::Triangulation&lt;3&gt;*&#32;in_tria)&#32;=&#32;0;
116 };
117 
118 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
