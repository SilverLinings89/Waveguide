<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_solution_weight_8h">
    <title>SolutionWeight.h File Reference</title>
    <programlisting>#include &lt;deal.II/base/function.h&gt;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_solution_weight">SolutionWeight</link></para>
<para><emphasis>This function has internal usage to execute a function only on the
interior of the Waveguide.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/Core/SolutionWeight.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">/**</emphasis>
2 <emphasis class="comment">&#32;*&#32;Die&#32;KLasse&#32;Solution-Weight</emphasis>
3 <emphasis class="comment">&#32;*&#32;Bei&#32;der&#32;Berechnung&#32;der&#32;L2-Norm&#32;sollen&#32;nur&#32;Werte&#32;innerhalb&#32;des&#32;Wellenleiters</emphasis>
4 <emphasis class="comment">&#32;*&#32;betrachtet&#32;werden.&#32;Dies&#32;kann&#32;mit&#32;einer&#32;gewichtungs-Funktion&#32;eingestellt</emphasis>
5 <emphasis class="comment">&#32;*&#32;werden,&#32;die&#32;bei&#32;integrate_difference&#32;mitübergeben&#32;wird.&#32;Diese&#32;Klasse&#32;dient</emphasis>
6 <emphasis class="comment">&#32;*&#32;genau&#32;dazu&#32;1&#32;zurück&#32;zu&#32;geben,&#32;wenn&#32;die&#32;Koordinate&#32;im&#32;Wellenleiter&#32;und&#32;nicht</emphasis>
7 <emphasis class="comment">&#32;*&#32;in&#32;der&#32;PML&#32;liegt&#32;und&#32;0&#32;sonst.</emphasis>
8 <emphasis class="comment">&#32;*</emphasis>
9 <emphasis class="comment">&#32;*&#32;Funktionen:&#32;Wie&#32;immer&#32;bei&#32;abgeleiteten&#32;Klassen&#32;von&#32;Function.</emphasis>
10 <emphasis class="comment">&#32;*&#32;@author:&#32;Pascal&#32;Kraft</emphasis>
11 <emphasis class="comment">&#32;*&#32;@date:&#32;07.09.2015</emphasis>
12 <emphasis class="comment">&#32;*/</emphasis>
13 
14 <emphasis class="preprocessor">#ifndef&#32;CODE_CORE_SOLUTIONWEIGHT_H_</emphasis>
15 <emphasis class="preprocessor">#define&#32;CODE_CORE_SOLUTIONWEIGHT_H_</emphasis>
16 
17 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/function.h&gt;</emphasis>
18 
19 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
20 <emphasis class="comment"></emphasis>
21 <emphasis class="comment">/**</emphasis>
22 <emphasis class="comment">&#32;*&#32;\class&#32;SolutionWeight</emphasis>
23 <emphasis class="comment">&#32;*&#32;\brief&#32;This&#32;function&#32;has&#32;internal&#32;usage&#32;to&#32;execute&#32;a&#32;function&#32;only&#32;on&#32;the</emphasis>
24 <emphasis class="comment">&#32;*&#32;interior&#32;of&#32;the&#32;Waveguide.</emphasis>
25 <emphasis class="comment">&#32;*</emphasis>
26 <emphasis class="comment">&#32;*&#32;SolutionWeight&#32;is&#32;a&#32;class,&#32;that&#32;has&#32;been&#32;derived&#32;from&#32;the&#32;class&#32;Function&#32;and</emphasis>
27 <emphasis class="comment">&#32;*&#32;which&#32;can&#32;be&#32;used&#32;to&#32;generate&#32;handles&#32;to&#32;functions,&#32;that&#32;return&#32;specific</emphasis>
28 <emphasis class="comment">&#32;*&#32;values.&#32;The&#32;pattern&#32;of&#32;passing&#32;object&#32;built&#32;from&#32;classes&#32;derived&#32;from</emphasis>
29 <emphasis class="comment">&#32;*&#32;Function&#32;is&#32;a&#32;commonly&#32;used&#32;one&#32;in&#32;Deal.II.&#32;This&#32;function&#32;offers&#32;a&#32;weight&#32;for</emphasis>
30 <emphasis class="comment">&#32;*&#32;locations&#32;inside&#32;the&#32;waveguide.&#32;In&#32;order&#32;to&#32;integrate&#32;or&#32;calculate&#32;the</emphasis>
31 <emphasis class="comment">&#32;*&#32;L2-norm&#32;inside&#32;the&#32;Waveguide,&#32;this&#32;is&#32;needed.&#32;The&#32;value&#32;of&#32;the&#32;function&#32;to&#32;be</emphasis>
32 <emphasis class="comment">&#32;*&#32;used&#32;is&#32;multiplied&#32;with&#32;this&#32;weighing-function&#32;which&#32;returns&#32;1&#32;for&#32;any&#32;point</emphasis>
33 <emphasis class="comment">&#32;*&#32;inside&#32;the&#32;Waveguide&#32;and&#32;0&#32;outside&#32;of&#32;it.&#32;Mathematically,&#32;this&#32;function&#32;can</emphasis>
34 <emphasis class="comment">&#32;*&#32;be&#32;represented&#32;by&#32;\f[&#32;f:&#32;\mathbb{R}^{dim}&#32;\to&#32;\{1,0\}&#32;,&#32;\,&#32;\boldsymbol{x}</emphasis>
35 <emphasis class="comment">&#32;*&#32;\mapsto&#32;\begin{cases}1&amp;\text{&#32;for}&#32;\,&#32;\boldsymbol{x}&#32;\in&#32;\Omega_W&#32;\\&#32;0</emphasis>
36 <emphasis class="comment">&#32;*&#32;&amp;\text{&#32;else}\end{cases}&#32;\f],&#32;where&#32;\f$&#32;\Omega_W\f$&#32;is&#32;the&#32;set&#32;of&#32;all&#32;points</emphasis>
37 <emphasis class="comment">&#32;*&#32;contained&#32;in&#32;the&#32;Waveguide.</emphasis>
38 <emphasis class="comment">&#32;*/</emphasis>
39 <emphasis class="keyword">template</emphasis>&#32;&lt;<emphasis class="keywordtype">int</emphasis>&#32;dim&gt;
<link linkend="class_solution_weight">40 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_solution_weight">SolutionWeight</link>&#32;:&#32;<emphasis class="keyword">public</emphasis>&#32;Function&lt;dim,&#32;double&gt;&#32;{
41 &#32;<emphasis class="keyword">public</emphasis>:<emphasis class="comment"></emphasis>
42 <emphasis class="comment">&#32;&#32;/**</emphasis>
43 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;whole&#32;class&#32;contains&#32;no&#32;specific&#32;data.&#32;The&#32;only&#32;information&#32;it&#32;needs</emphasis>
44 <emphasis class="comment">&#32;&#32;&#32;*&#32;stem&#32;from&#32;the&#32;Parameters&#32;object&#32;parsed&#32;from&#32;the&#32;input&#32;file.&#32;This&#32;object</emphasis>
45 <emphasis class="comment">&#32;&#32;&#32;*&#32;gets&#32;initialized&#32;inside&#32;this&#32;constructor.</emphasis>
46 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
47 &#32;&#32;<link linkend="class_solution_weight">SolutionWeight</link>();
48 <emphasis class="comment"></emphasis>
49 <emphasis class="comment">&#32;&#32;/**</emphasis>
50 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;returns&#32;1,&#32;if&#32;the&#32;given&#32;component&#32;is&#32;inside&#32;the&#32;Waveguide&#32;and</emphasis>
51 <emphasis class="comment">&#32;&#32;&#32;*&#32;0&#32;otherwise.&#32;Since&#32;this&#32;method&#32;is&#32;intended&#32;also&#32;for&#32;vector-valued&#32;functions</emphasis>
52 <emphasis class="comment">&#32;&#32;&#32;*&#32;,&#32;this&#32;method&#32;also&#32;has&#32;to&#32;account&#32;for&#32;a&#32;component&#32;of&#32;the&#32;result&#32;which&#32;for</emphasis>
53 <emphasis class="comment">&#32;&#32;&#32;*&#32;scalar&#32;functions&#32;is&#32;0.&#32;\param&#32;p&#32;This&#32;is&#32;the&#32;location&#32;in&#32;which&#32;the&#32;test</emphasis>
54 <emphasis class="comment">&#32;&#32;&#32;*&#32;should&#32;be&#32;executed.&#32;\param&#32;component&#32;Determines&#32;which&#32;component&#32;is&#32;to&#32;be</emphasis>
55 <emphasis class="comment">&#32;&#32;&#32;*&#32;evaluated.&#32;In&#32;this&#32;case&#32;that&#32;information&#32;does&#32;not&#32;have&#32;any&#32;further&#32;meaning.</emphasis>
56 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
57 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;value(<emphasis class="keyword">const</emphasis>&#32;Point&lt;dim&gt;&#32;&amp;p,&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;component)&#32;<emphasis class="keyword">const</emphasis>;
58 <emphasis class="comment"></emphasis>
59 <emphasis class="comment">&#32;&#32;/**</emphasis>
60 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;gets&#32;called&#32;by&#32;the&#32;framework&#32;and&#32;calls&#32;value(const&#32;Point&lt;dim&gt;</emphasis>
61 <emphasis class="comment">&#32;&#32;&#32;*&#32;&amp;p,&#32;const&#32;unsigned&#32;int&#32;component&#32;)&#32;for&#32;all&#32;components&#32;and&#32;stores&#32;the</emphasis>
62 <emphasis class="comment">&#32;&#32;&#32;*&#32;results&#32;in&#32;value.&#32;\param&#32;p&#32;The&#32;location&#32;is&#32;given&#32;here&#32;and&#32;gets&#32;passed&#32;along</emphasis>
63 <emphasis class="comment">&#32;&#32;&#32;*&#32;to&#32;the&#32;individual&#32;value-calls.&#32;\param&#32;value&#32;This&#32;is&#32;a&#32;vector&#32;which&#32;returns</emphasis>
64 <emphasis class="comment">&#32;&#32;&#32;*&#32;the&#32;results&#32;in&#32;place.&#32;It&#32;is&#32;a&#32;reference&#32;that&#32;is&#32;edited&#32;in&#32;value(const</emphasis>
65 <emphasis class="comment">&#32;&#32;&#32;*&#32;Point&lt;dim&gt;&#32;&amp;p,&#32;const&#32;unsigned&#32;int&#32;component&#32;).</emphasis>
66 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
67 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;vector_value(<emphasis class="keyword">const</emphasis>&#32;Point&lt;dim&gt;&#32;&amp;p,&#32;Vector&lt;double&gt;&#32;&amp;value)&#32;<emphasis class="keyword">const</emphasis>;
68 };
69 
70 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
