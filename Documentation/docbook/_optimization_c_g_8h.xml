<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_optimization_c_g_8h">
    <title>OptimizationCG.h File Reference</title>
    <programlisting>#include &quot;OptimizationAlgorithm.h&quot;</programlisting>
    <programlisting>#include &quot;../Core/Waveguide.h&quot;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_optimization_c_g">OptimizationCG</link></para>
<para><emphasis>This class implements the computation of an optimization step via a CG-method.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/OptimizationAlgorithm/OptimizationCG.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;OptimizationCG_H_</emphasis>
2 <emphasis class="preprocessor">#define&#32;OptimizationCG_H_</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&quot;OptimizationAlgorithm.h&quot;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&quot;../Core/Waveguide.h&quot;</emphasis>
6 <emphasis class="comment"></emphasis>
7 <emphasis class="comment">/**</emphasis>
8 <emphasis class="comment">&#32;*&#32;\class&#32;OptimizationCG</emphasis>
9 <emphasis class="comment">&#32;*&#32;\brief&#32;This&#32;class&#32;implements&#32;the&#32;computation&#32;of&#32;an&#32;optimization&#32;step&#32;via&#32;a&#32;CG-method.</emphasis>
10 <emphasis class="comment">&#32;*</emphasis>
11 <emphasis class="comment">&#32;*&#32;Objects&#32;of&#32;the&#32;Type&#32;OptimizationAlgorithm&#32;are&#32;used&#32;by&#32;the&#32;class&#32;OptimizationStrategy&#32;to&#32;compute&#32;the&#32;next&#32;viable&#32;configuration&#32;based&#32;on&#32;former&#32;results.&#32;Its&#32;is&#32;encapsulated&#32;in&#32;it&apos;s&#32;own&#32;class&#32;to&#32;offer&#32;comparison&#32;and&#32;easy&#32;changing&#32;between&#32;differenct&#32;schemes.</emphasis>
12 <emphasis class="comment">&#32;*&#32;\author&#32;Pascal&#32;Kraft</emphasis>
13 <emphasis class="comment">&#32;*&#32;\date&#32;29.11.2016</emphasis>
14 <emphasis class="comment">&#32;*/</emphasis>
<link linkend="class_optimization_c_g">15 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_optimization_c_g">OptimizationCG</link>&#32;:&#32;<emphasis class="keyword">public</emphasis>&#32;<link linkend="class_optimization_algorithm">OptimizationAlgorithm</link>&lt;double&gt;&#32;{
16 
17 &#32;<emphasis class="keyword">public</emphasis>:
18 &#32;&#32;<link linkend="class_optimization_c_g">OptimizationCG</link>();
19 
20 &#32;&#32;~<link linkend="class_optimization_c_g">OptimizationCG</link>();
21 
22 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_optimization_c_g_1a9b0d0c44baea9c922a787525811259ad">pass_result_small_step</link>(std::vector&lt;double&gt;);
23 
24 
25 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_optimization_c_g_1a7b55765b281b623f9c8ef93e7ad00aa7">pass_result_big_step</link>(<emphasis class="keywordtype">double</emphasis>);
26 <emphasis class="comment"></emphasis>
27 <emphasis class="comment">&#32;&#32;/**</emphasis>
28 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;optimization&#32;is&#32;mainly&#32;split&#32;into&#32;two&#32;kinds&#32;of&#32;steps:&#32;Full&#32;and&#32;small&#32;steps.&#32;For&#32;FD&#32;based&#32;schemes,&#32;a&#32;small&#32;step&#32;is&#32;a&#32;computation&#32;of&#32;finite&#32;differences&#32;for&#32;all&#32;degrees&#32;of&#32;freedom&#32;which&#32;entails&#32;a&#32;lot&#32;of&#32;computation.&#32;Small&#32;here&#32;refers&#32;to&#32;the&#32;norm&#32;of&#32;the&#32;step&#32;width&#32;-&#32;not&#32;necessarily&#32;to&#32;the&#32;amount&#32;of&#32;computation&#32;required.</emphasis>
29 <emphasis class="comment">&#32;&#32;&#32;*&#32;In&#32;general&#32;this&#32;function&#32;is&#32;supposed&#32;to&#32;gather&#32;information&#32;about&#32;the&#32;target&#32;functional&#32;around&#32;the&#32;current&#32;state.</emphasis>
30 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;small_steps_before&#32;this&#32;number&#32;tells&#32;the&#32;scheme&#32;how&#32;many&#32;small&#32;steps&#32;were&#32;performed&#32;before&#32;the&#32;current&#32;request.</emphasis>
31 <emphasis class="comment">&#32;&#32;&#32;*&#32;\return&#32;this&#32;is&#32;true,&#32;if&#32;the&#32;Optimization&#32;Scheme&#32;requires&#32;more&#32;small&#32;steps&#32;before&#32;a&#32;big&#32;step&#32;can&#32;be&#32;performed.</emphasis>
32 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
33 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_optimization_c_g_1ae779e5bee6aaee38999e4705c72e11dc">perform_small_step_next</link>(&#32;<emphasis class="keywordtype">int</emphasis>&#32;small_steps_before&#32;);
34 <emphasis class="comment"></emphasis>
35 <emphasis class="comment">&#32;&#32;/**</emphasis>
36 <emphasis class="comment">&#32;&#32;&#32;*&#32;For&#32;the&#32;optimization&#32;scheme&#32;to&#32;know,&#32;which&#32;step&#32;size&#32;is&#32;appropriate,&#32;this&#32;function&#32;was&#32;included.</emphasis>
37 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;small_steps_before&#32;similar&#32;to&#32;perform_small_step_next&#32;this&#32;is&#32;the&#32;number&#32;of&#32;small&#32;steps&#32;before&#32;the&#32;current&#32;one.</emphasis>
38 <emphasis class="comment">&#32;&#32;&#32;*&#32;\return&#32;double&#32;this&#32;is&#32;how&#32;much&#32;the&#32;values&#32;of&#32;the&#32;degrees&#32;of&#32;freedom&#32;should&#32;be&#32;adapted.</emphasis>
39 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
40 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="class_optimization_c_g_1a670ceaf08732728cf8e949fddd037787">get_small_step_step_width</link>(&#32;<emphasis class="keywordtype">int</emphasis>&#32;small_steps_before&#32;);
41 <emphasis class="comment"></emphasis>
42 <emphasis class="comment">&#32;&#32;/**</emphasis>
43 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;functions&#32;returns&#32;true,&#32;if&#32;enough&#32;steps&#32;were&#32;performed&#32;to&#32;compute&#32;the&#32;next&#32;state&#32;to&#32;compute&#32;a&#32;full&#32;solution&#32;on.</emphasis>
44 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;small_steps_before&#32;number&#32;of&#32;small&#32;steps&#32;performed&#32;before&#32;this&#32;call.</emphasis>
45 <emphasis class="comment">&#32;&#32;&#32;*&#32;\return&#32;true,&#32;if&#32;the&#32;next&#32;computation&#32;should&#32;be&#32;a&#32;big&#32;step&#32;-&#32;otherwise&#32;false.</emphasis>
46 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
47 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_optimization_c_g_1a5ad38004f2848c1e77613d5c6d69bdcd">perform_big_step_next</link>(&#32;<emphasis class="keywordtype">int</emphasis>&#32;small_steps_before&#32;)&#32;;
48 <emphasis class="comment"></emphasis>
49 <emphasis class="comment">&#32;&#32;/**</emphasis>
50 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;computes&#32;the&#32;states&#32;that&#32;should&#32;be&#32;computed&#32;next.&#32;If&#32;the&#32;next&#32;step&#32;will&#32;be&#32;a&#32;small&#32;step&#32;the&#32;update&#32;can&#32;be&#32;done&#32;by&#32;simply&#32;updating&#32;all&#32;dofs&#32;with&#32;a&#32;step&#32;width&#32;(or&#32;only&#32;one&#32;depending&#32;on&#32;the&#32;pattern)&#32;so&#32;this&#32;function&#32;is&#32;only&#32;used&#32;when&#32;a&#32;big&#32;step&#32;will&#32;be&#32;computed&#32;next&#32;and&#32;therefore&#32;all&#32;dofs&#32;could&#32;change&#32;differently.</emphasis>
51 <emphasis class="comment">&#32;&#32;&#32;*&#32;\return&#32;This&#32;is&#32;a&#32;vector&#32;of&#32;degrees&#32;of&#32;freedom&#32;which&#32;can&#32;be&#32;used&#32;by&#32;the&#32;Optimization&#32;Strategy&#32;to&#32;update&#32;the&#32;Space&#32;Transformation.</emphasis>
52 <emphasis class="comment">&#32;&#32;&#32;*</emphasis>
53 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
54 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;std::vector&lt;double&gt;&#32;<link linkend="class_optimization_c_g_1a91574337c2111756126703e7f414e7ff">get_big_step_configuration</link>();
55 
56 };
57 
58 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
