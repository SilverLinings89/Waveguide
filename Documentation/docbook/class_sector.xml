<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_sector">
<title>Sector class Reference</title>
<para>
    <programlisting>#include <link linkend="_sector_8h">&lt;Sector.h&gt;</link></programlisting>
</para>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>Dofs_Per_Sector</declname>
        <defname>Dofs_Per_Sector</defname>
      </param>
    </templateparamlist>
        <section>
            <title>Public Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const bool left<para><emphasis>This value describes, if this Sector is at the left (small z) end of the
computational domain.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const bool right<para><emphasis>This value describes, if this Sector is at the right (large z) end of the
computational domain.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const bool boundary<para><emphasis>This value is true, if either left or right are true.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const double z_0</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const double z_1<para><emphasis>The objects created from this class are supposed to hand back the material
properties which include the space-transformation Tensors.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int LowestDof</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int NDofs</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int NInternalBoundaryDofs</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int NActiveCells</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double * dofs_l</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double * dofs_r</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int * derivative</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool * zero_derivative</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_sector_1a538e56d469fd8efd80afbc613451837e">Sector</link> (
bool in_left, bool in_right, double in_z_0, double in_z_1)<para><emphasis>Constructor of the Sector class, that takes all important properties as an
input property.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_sector_1a9538b755674f1efee2aa95f398176fd7">~Sector</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Tensor&lt; 2, 3, double &gt; <link linkend="class_sector_1a2b2569942b14219db1d11200684f7ac8">TransformationTensorInternal</link> (
double in_x, double in_y, double in_z)<para><emphasis>This method gets called from the WaveguideStructure object used in the
simulation.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1ad5afcfc433e07108c156e2596ded82cd">set_properties</link> (
double , double , double , double )<para><emphasis>This function is used during the optimization-operation to update the
properties of the space-transformation.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1ad2e263727191c1e56b48f12ce8e24a31">set_properties</link> (
double , double , double , double , double , double )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1a197c78d119ee872f43c895b02ebb3e8d">set_properties_force</link> (
double , double , double , double )<para><emphasis>This function is the same as set_properties with the difference of being
able to change the values of the input- and output boundary.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1a374ae387b011fd838ee0c37a81d389dc">set_properties_force</link> (
double , double , double , double , double , double )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1a01595c09bec7ef57431ab39e29a90a67">getQ1</link> (
double )<para><emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in trnsformed coordinates.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1a55743720f4d5d768c7bd30658c19f499">getQ2</link> (
double )<para><emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in transformed coordinates.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1a11a28348094a673a59d26fe1c05cd910">getQ3</link> (
double )<para><emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in transformed coordinates.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int <link linkend="class_sector_1a74f1d1424faf72379ef85818509feb18">getLowestDof</link> (
)<para><emphasis>This function returns the number of the lowest degree of freedom associated
with this Sector.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int <link linkend="class_sector_1a28c9ae7f32eb149d7f3a8e7808e56aa7">getNDofs</link> (
)<para><emphasis>This function returns the number of dofs which are part of this sector.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int <link linkend="class_sector_1a664059f783a9f7be0da5aa48a18430e0">getNInternalBoundaryDofs</link> (
)<para><emphasis>In order to set appropriate boundary conditions it makes sense to
determine, which degrees are associated with an edge which is part of an
interface to another sector.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int <link linkend="class_sector_1a4a746c6e92da3f9968fa1ae8df179ac0">getNActiveCells</link> (
)<para><emphasis>This function can be used to query the number of cells in a Sector /
subdomain.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1a43ad74bf2b9e740f2d3172b15349de5c">setLowestDof</link> (
unsigned int)<para><emphasis>Setter for the value that the getter should return.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1aae228325497b1b8da9bc2e2a325fcc6f">setNDofs</link> (
unsigned int)<para><emphasis>Setter for the value that the getter should return.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1a0d8e1e8ea932dddd7af3dae10af20156">setNInternalBoundaryDofs</link> (
unsigned int)<para><emphasis>Setter for the value that the getter should return.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_sector_1ac021e78fe81aea278d5d0c76486fdb50">setNActiveCells</link> (
unsigned int)<para><emphasis>Setter for the value that the getter should return.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1a2a7e42b042cbcf3bb107a64d377c578f">get_dof</link> (
unsigned int i, double z)<para><emphasis>This function returns the value of a specified dof at a given internal
position.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1a2fcef999ffc19d510f17662565b921f0">get_r</link> (
double z)<para><emphasis>Get an interpolation of the radius for a coordinate z.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1addd7217e2ab6fe8104e092e4514804fc">get_v</link> (
double z)<para><emphasis>Get an interpolation of the tilt for a coordinate z.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>double <link linkend="class_sector_1acf707bf29246b564338b49d6653812ab">get_m</link> (
double z)<para><emphasis>Get an interpolation of the shift for a coordinate z.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Sectors are used, to split the computational domain into chunks, whose degrees of freedom are likely coupled. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>The interfaces between Sectors lie in the xy-plane and they are ordered by their z-value. <formalpara><title>Author: </title>

<para>Pascal Kraft </para>
</formalpara>
<formalpara><title>Date: </title>

<para>17.12.2015 </para>
</formalpara>
</para>
                <para>Definition at line 19 of file Sector.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Sector.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
            <simplesect>
                <title>const double Sector&lt; Dofs_Per_Sector &gt;::z_1</title>                
<para>For this to be possible, the <link linkend="class_sector">Sector</link> has to be able to transform from global coordinates to coordinates that are scaled inside the <link linkend="class_sector">Sector</link>. For this purpose, the z_0 and z_1 variables store the z-coordinate of both, the left and right surface. </para>

                <para>Definition at line 60 of file Sector.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Sector.h</para></listitem></itemizedlist></para>
            </simplesect>
        </section>
            <section xml:id="class_sector_1a538e56d469fd8efd80afbc613451837e">
                <title>Sector&lt; Dofs_Per_Sector &gt;::Sector (bool in_left, bool in_right, double in_z_0, double in_z_1)</title> <emphasis>Constructor of the Sector class, that takes all important properties as an
input property.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in_left</entry>
                                <entry>
<para>stores if the sector is at the left end. It is used to initialize the according variable. </para>
</entry>
                            </row>
                            <row>
                                <entry>in_right</entry>
                                <entry>
<para>stores if the sector is at the right end. It is used to initialize the according variable. </para>
</entry>
                            </row>
                            <row>
                                <entry>in_z_0</entry>
                                <entry>
<para>stores the z-coordinate of the left surface-plain. It is used to initialize the according variable. </para>
</entry>
                            </row>
                            <row>
                                <entry>in_z_1</entry>
                                <entry>
<para>stores the z-coordinate of the right surface-plain. It is used to initialize the according variable. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_sector_1a9538b755674f1efee2aa95f398176fd7">
                <title>Sector&lt; Dofs_Per_Sector &gt;::~Sector ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_sector_1a2b2569942b14219db1d11200684f7ac8">
                <title>Tensor&lt; 2, 3, double &gt; Sector&lt; Dimension &gt;::TransformationTensorInternal (double in_x, double in_y, double in_z) const</title> <emphasis>This method gets called from the WaveguideStructure object used in the
simulation.</emphasis>
                
<para>This is where the <link linkend="class_waveguide">Waveguide</link> object gets the material Tensors to build the system-matrix. This method returns a complex-values Matrix containing the system-tensors <equation><title>form_15</title>$\boldsymbol{\mu^{-1}} $</equation> and <equation><title>form_16</title>$\boldsymbol{\epsilon} $</equation>. 
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in_x</entry>
                                <entry>
<para>x-coordinate of the point, for which the Tensor should be calculated. </para>
</entry>
                            </row>
                            <row>
                                <entry>in_y</entry>
                                <entry>
<para>y-coordinate of the point, for which the Tensor should be calculated. </para>
</entry>
                            </row>
                            <row>
                                <entry>in_z</entry>
                                <entry>
<para>z-coordinate of the point, for which the Tensor should be calculated. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_sector_1ad5afcfc433e07108c156e2596ded82cd">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::set_properties (double, double, double, double)</title> <emphasis>This function is used during the optimization-operation to update the
properties of the space-transformation.</emphasis>
                
<para>However, to ensure, that the boundary-conditions remain intact, this function cannot edit the left defrees of freedom if left is true and it cannot edit the right degrees of freedom if right is true </para>

            </section>
            <section xml:id="class_sector_1ad2e263727191c1e56b48f12ce8e24a31">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::set_properties (double, double, double, double, double, double)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_sector_1a197c78d119ee872f43c895b02ebb3e8d">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::set_properties_force (double, double, double, double)</title> <emphasis>This function is the same as set_properties with the difference of being
able to change the values of the input- and output boundary.</emphasis>
                
            </section>
            <section xml:id="class_sector_1a374ae387b011fd838ee0c37a81d389dc">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::set_properties_force (double, double, double, double, double, double)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_sector_1a01595c09bec7ef57431ab39e29a90a67">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::getQ1 (double) const</title> <emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in trnsformed coordinates.</emphasis>
                
<para>This function returnes Q1 for a given position and the current transformation. </para>

            </section>
            <section xml:id="class_sector_1a55743720f4d5d768c7bd30658c19f499">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::getQ2 (double) const</title> <emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in transformed coordinates.</emphasis>
                
<para>This function returnes Q2 for a given position and the current transformation. </para>

            </section>
            <section xml:id="class_sector_1a11a28348094a673a59d26fe1c05cd910">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::getQ3 (double) const</title> <emphasis>The values of Q1, Q2 and Q3 are needed to compute the solution in real
coordinates from the one in transformed coordinates.</emphasis>
                
<para>This function returnes Q3 for a given position and the current transformation. </para>

            </section>
            <section xml:id="class_sector_1a74f1d1424faf72379ef85818509feb18">
                <title>unsigned int Sector&lt; Dofs_Per_Sector &gt;::getLowestDof () const</title> <emphasis>This function returns the number of the lowest degree of freedom associated
with this Sector.</emphasis>
                
<para>Keep in mind, that the degrees of freedom associated with edges on the lower (small <equation><title>form_1</title>$ z $</equation>) interface are not included since this functionality is supposed to help in the block-structure generation and those dofs are part of the neighboring block. </para>

            </section>
            <section xml:id="class_sector_1a28c9ae7f32eb149d7f3a8e7808e56aa7">
                <title>unsigned int Sector&lt; Dofs_Per_Sector &gt;::getNDofs () const</title> <emphasis>This function returns the number of dofs which are part of this sector.</emphasis>
                
<para>The same remarks as for <link linkend="class_sector_1a74f1d1424faf72379ef85818509feb18">getLowestDof()</link> apply. </para>

            </section>
            <section xml:id="class_sector_1a664059f783a9f7be0da5aa48a18430e0">
                <title>unsigned int Sector&lt; Dofs_Per_Sector &gt;::getNInternalBoundaryDofs () const</title> <emphasis>In order to set appropriate boundary conditions it makes sense to
determine, which degrees are associated with an edge which is part of an
interface to another sector.</emphasis>
                
<para>Due to the reordering of dofs this is especially easy since the dofs on the interface are those in the interval <equation><title>form_17</title>\[[\,\operatorname{LowestDof} + \operatorname{NDofs} - \operatorname{NInternalBoundaryDofs}\, , \, \operatorname{LowestDof} + \operatorname{NDofs}\,]\]</equation> </para>

            </section>
            <section xml:id="class_sector_1a4a746c6e92da3f9968fa1ae8df179ac0">
                <title>unsigned int Sector&lt; Dofs_Per_Sector &gt;::getNActiveCells () const</title> <emphasis>This function can be used to query the number of cells in a Sector /
subdomain.</emphasis>
                
<para>In this case there are no problems with interface-dofs. Every cell belongs to exactly one sector (the problem arises from the fact, that one edge can (and most of the time will) belong to more then one cell). </para>

            </section>
            <section xml:id="class_sector_1a43ad74bf2b9e740f2d3172b15349de5c">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::setLowestDof (unsigned int)</title> <emphasis>Setter for the value that the getter should return.</emphasis>
                
<para>Called after Dof-reordering. </para>

            </section>
            <section xml:id="class_sector_1aae228325497b1b8da9bc2e2a325fcc6f">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::setNDofs (unsigned int)</title> <emphasis>Setter for the value that the getter should return.</emphasis>
                
<para>Called after Dof-reordering. </para>

            </section>
            <section xml:id="class_sector_1a0d8e1e8ea932dddd7af3dae10af20156">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::setNInternalBoundaryDofs (unsigned int)</title> <emphasis>Setter for the value that the getter should return.</emphasis>
                
<para>Called after Dof-reordering. </para>

            </section>
            <section xml:id="class_sector_1ac021e78fe81aea278d5d0c76486fdb50">
                <title>void Sector&lt; Dofs_Per_Sector &gt;::setNActiveCells (unsigned int)</title> <emphasis>Setter for the value that the getter should return.</emphasis>
                
<para>Called after Dof-reordering. </para>

            </section>
            <section xml:id="class_sector_1a2a7e42b042cbcf3bb107a64d377c578f">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::get_dof (unsigned int i, double z) const</title> <emphasis>This function returns the value of a specified dof at a given internal
position.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>i</entry>
                                <entry>
<para>index of the dof. This class has a template argument specifying the number of dofs per sector. This argument has to be less or equal. </para>
</entry>
                            </row>
                            <row>
                                <entry>z</entry>
                                <entry>
<para>this is a relative value for interpolation with <equation><title>form_18</title>$z \in [0,1]$</equation>. If <equation><title>form_19</title>$z = 0$</equation> the values for the lower end of the sector are returned. If <equation><title>form_20</title>$z=1$</equation> the values for the upper end of the sector are returned. In between the values are interpolated according to the rules for the specific dof. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_sector_1a2fcef999ffc19d510f17662565b921f0">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::get_r (double z) const</title> <emphasis>Get an interpolation of the radius for a coordinate z.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>double</entry>
                                <entry>
<para>z is the <equation><title>form_18</title>$z \in [0,1]$</equation> coordinate for the interpolation. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_sector_1addd7217e2ab6fe8104e092e4514804fc">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::get_v (double z) const</title> <emphasis>Get an interpolation of the tilt for a coordinate z.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>double</entry>
                                <entry>
<para>z is the <equation><title>form_18</title>$z \in [0,1]$</equation> coordinate for the interpolation. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="class_sector_1acf707bf29246b564338b49d6653812ab">
                <title>double Sector&lt; Dofs_Per_Sector &gt;::get_m (double z) const</title> <emphasis>Get an interpolation of the shift for a coordinate z.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>double</entry>
                                <entry>
<para>z is the <equation><title>form_18</title>$z \in [0,1]$</equation> coordinate for the interpolation. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
</section>
