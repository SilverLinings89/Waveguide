<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_optimization_8h">
    <title>Optimization.h File Reference</title>
    <programlisting>#include &lt;deal.II/lac/vector.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/full_matrix.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/sparse_matrix.h&gt;</programlisting>
    <programlisting>#include &quot;../Core/Waveguide.h&quot;</programlisting>
    <programlisting>#include &quot;../Helpers/Parameters.h&quot;</programlisting>
    <programlisting>#include &quot;../SpaceTransformations/SpaceTransformation.h&quot;</programlisting>
    <programlisting>#include &quot;../MeshGenerators/MeshGenerator.h&quot;</programlisting>
    <programlisting>#include &quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</programlisting>
    <programlisting>#include &quot;../OptimizationAlgorithm/OptimizationCG.h&quot;</programlisting>
    <programlisting>#include &quot;../OptimizationAlgorithm/OptimizationSteepestDescent.h&quot;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_optimization">Optimization</link></para>
<para><emphasis>This class is an abstract interface to describe the general workings of an optimization scheme.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/OptimizationStrategies/Optimization.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;OptimizationFlag</emphasis>
2 <emphasis class="preprocessor">#define&#32;OptimizationFlag</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/vector.h&gt;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/full_matrix.h&gt;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/sparse_matrix.h&gt;</emphasis>
7 
8 <emphasis class="preprocessor">#include&#32;&quot;../Core/Waveguide.h&quot;</emphasis>
9 <emphasis class="preprocessor">#include&#32;&quot;../Helpers/Parameters.h&quot;</emphasis>
10 <emphasis class="preprocessor">#include&#32;&quot;../SpaceTransformations/SpaceTransformation.h&quot;</emphasis>
11 <emphasis class="preprocessor">#include&#32;&quot;../MeshGenerators/MeshGenerator.h&quot;</emphasis>
12 <emphasis class="preprocessor">#include&#32;&quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</emphasis>
13 <emphasis class="preprocessor">#include&#32;&quot;../OptimizationAlgorithm/OptimizationCG.h&quot;</emphasis>
14 <emphasis class="preprocessor">#include&#32;&quot;../OptimizationAlgorithm/OptimizationSteepestDescent.h&quot;</emphasis>
15 
16 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
17 <emphasis class="comment"></emphasis>
18 <emphasis class="comment">/**</emphasis>
19 <emphasis class="comment">&#32;*&#32;\class&#32;Optimization</emphasis>
20 <emphasis class="comment">&#32;*&#32;\brief&#32;This&#32;class&#32;is&#32;an&#32;abstract&#32;interface&#32;to&#32;describe&#32;the&#32;general&#32;workings&#32;of&#32;an&#32;optimization&#32;scheme.&#32;It&#32;is&#32;used&#32;to&#32;compute&#32;optimization&#32;steps&#32;and&#32;controls&#32;the&#32;DOFs&#32;of&#32;the&#32;ShapeTransformation.</emphasis>
21 <emphasis class="comment">&#32;*</emphasis>
22 <emphasis class="comment">&#32;*&#32;In&#32;general&#32;there&#32;are&#32;two&#32;kinds&#32;of&#32;Optimization&#32;Schemes&#32;derived&#32;from&#32;this&#32;class.&#32;On&#32;the&#32;one&#32;hand&#32;there&#32;are&#32;finite-difference&#32;kind&#32;schemes&#32;which&#32;are&#32;based&#32;on&#32;the&#32;idea&#32;of&#32;varying&#32;the&#32;value&#32;of&#32;one&#32;shape&#32;parameter&#32;slightly,&#32;resolving&#32;the&#32;problem&#32;(which&#32;is&#32;now&#32;slightl&#32;varied&#32;compaired&#32;to&#32;the&#32;original&#32;one)&#32;and&#32;hence&#32;computing&#32;the&#32;entry&#32;of&#32;the&#32;shape&#32;gradient.&#32;Repeating&#32;this&#32;pattern&#32;for&#32;any&#32;un-restrained&#32;dof&#32;we&#32;can&#32;&#32;compute&#32;the&#32;complete&#32;gradient.</emphasis>
23 <emphasis class="comment">&#32;*&#32;The&#32;other&#32;version&#32;is&#32;based&#32;on&#32;an&#32;adjoint&#32;model&#32;where&#32;we&#32;solve&#32;the&#32;forward&#32;problem&#32;and&#32;its&#32;dual&#32;and&#32;can&#32;compute&#32;the&#32;shape&#32;gradient&#32;for&#32;all&#32;DOFs&#32;from&#32;these&#32;two&#32;results.</emphasis>
24 <emphasis class="comment">&#32;*&#32;\author&#32;Pascal&#32;Kraft</emphasis>
25 <emphasis class="comment">&#32;*&#32;\date&#32;28.11.2016</emphasis>
26 <emphasis class="comment">&#32;*/</emphasis>
27 
<link linkend="class_optimization">28 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_optimization">Optimization</link>&#32;{
29 
30 
31 &#32;<emphasis class="keyword">public</emphasis>:
32 
33 &#32;&#32;&#32;&#32;<link linkend="class_optimization">Optimization</link>();
34 
35 &#32;&#32;&#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;~<link linkend="class_optimization">Optimization</link>();
36 
37 &#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;type&#32;=&#32;-1;&#32;<emphasis class="comment">//&#32;This&#32;means&#32;that&#32;this&#32;is&#32;not&#32;actually&#32;an&#32;Optimization-implementation.&#32;0&#32;=&#32;FD,&#32;1&#32;=&#32;Adj.</emphasis>
38 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConditionalOStream&#32;&#32;pout;
40 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;dofs&#32;=1;
42 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;freedofs&#32;=&#32;0;
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;Waveguide&#32;*&#32;waveguide;</emphasis>
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>&#32;*&#32;st;
48 
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_mesh_generator">MeshGenerator</link>&#32;*&#32;mg;
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="comment">//&#32;OptimizationAlgorithm&lt;std::complex&lt;double&gt;&gt;&#32;*&#32;oa;</emphasis>
52 <emphasis class="comment"></emphasis>
53 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**</emphasis>
54 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;the&#32;core&#32;implementation&#32;of&#32;an&#32;optimization&#32;algorithm.&#32;Currently&#32;it&#32;is&#32;very&#32;fundamental&#32;in&#32;its&#32;technical&#32;prowess&#32;which&#32;can&#32;be&#32;improved&#32;upon&#32;in&#32;later&#32;versions.&#32;Essentially,&#32;it&#32;calculates&#32;the&#32;signal&#32;quality&#32;for&#32;a&#32;configurations&#32;and&#32;for&#32;small&#32;steps&#32;in&#32;every&#32;one&#32;of&#32;the&#32;dofs.&#32;After&#32;that,&#32;the&#32;optimization-step&#32;is&#32;estimated&#32;based&#32;on&#32;difference-quotients.&#32;Following&#32;this&#32;step,&#32;a&#32;large&#32;step&#32;is&#32;computed&#32;based&#32;upon&#32;the&#32;approximation&#32;of&#32;the&#32;gradient&#32;of&#32;the&#32;signal-quality&#32;functional&#32;and&#32;the&#32;iteration&#32;starts&#32;anew.&#32;If&#32;a&#32;decrease&#32;in&#32;quality&#32;is&#32;detected,&#32;the&#32;optimization-step&#32;is&#32;undone&#32;and&#32;the&#32;step-width&#32;is&#32;reduced.</emphasis>
55 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;This&#32;function&#32;controls&#32;both&#32;the&#32;Waveguide-&#32;and&#32;the&#32;Waveguide-structure&#32;object.</emphasis>
56 <emphasis class="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;run()&#32;=&#32;0;
59 
60 };
61 
62 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
