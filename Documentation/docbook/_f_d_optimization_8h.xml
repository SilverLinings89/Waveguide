<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_f_d_optimization_8h">
    <title>FDOptimization.h File Reference</title>
    <programlisting>#include &quot;../Core/Waveguide.h&quot;</programlisting>
    <programlisting>#include &quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</programlisting>
    <programlisting>#include &quot;Optimization.h&quot;</programlisting>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/OptimizationStrategies/FDOptimization.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;FDOptimization_H_</emphasis>
2 <emphasis class="preprocessor">#define&#32;FDOptimization_H_</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&quot;../Core/Waveguide.h&quot;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&quot;Optimization.h&quot;</emphasis>
7 
8 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
9 <emphasis class="comment"></emphasis>
10 <emphasis class="comment">/**</emphasis>
11 <emphasis class="comment">&#32;*&#32;\class&#32;FDOptimization</emphasis>
12 <emphasis class="comment">&#32;*&#32;\brief&#32;Derived&#32;from&#32;the&#32;Optimization&#32;class,&#32;this&#32;class&#32;implements&#32;an</emphasis>
13 <emphasis class="comment">&#32;*&#32;Optimization-scheme&#32;based&#32;on&#32;finite&#32;differences.</emphasis>
14 <emphasis class="comment">&#32;*</emphasis>
15 <emphasis class="comment">&#32;*&#32;The&#32;idea&#32;here&#32;is&#32;to&#32;compute&#32;the&#32;solution&#32;of&#32;one&#32;forward&#32;problem&#32;per&#32;entry&#32;in</emphasis>
16 <emphasis class="comment">&#32;*&#32;the&#32;shape&#32;gradient.&#32;For&#32;\f$N\$&#32;degrees&#32;of&#32;freedom&#32;available&#32;for&#32;the&#32;shape</emphasis>
17 <emphasis class="comment">&#32;*&#32;parametrization,&#32;this&#32;results&#32;in&#32;a&#32;total&#32;of&#32;\f$N+1\f$&#32;forward&#32;problems&#32;to&#32;be</emphasis>
18 <emphasis class="comment">&#32;*&#32;solved.&#32;Sooner&#32;or&#32;later&#32;we&#32;aim&#32;at&#32;implementing&#32;an&#32;adjoint&#32;optimization</emphasis>
19 <emphasis class="comment">&#32;*&#32;scheme,&#32;which&#32;should&#32;come&#32;at&#32;a&#32;much&#32;lower&#32;cost.&#32;\author&#32;Pascal&#32;Kraft</emphasis>
20 <emphasis class="comment">&#32;*&#32;\date&#32;29.11.2016</emphasis>
21 <emphasis class="comment">&#32;*/</emphasis>
22 <emphasis class="keyword">class&#32;</emphasis>FDOptimization&#32;:&#32;<emphasis class="keyword">public</emphasis>&#32;<link linkend="class_optimization">Optimization</link>&#32;{
23 &#32;<emphasis class="keyword">public</emphasis>:
24 &#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;type&#32;=
25 &#32;&#32;&#32;&#32;&#32;&#32;0;&#32;&#32;<emphasis class="comment">//&#32;Allows&#32;callers&#32;to&#32;identify&#32;the&#32;exact&#32;type&#32;easily.&#32;0&#32;=&#32;FD,&#32;1&#32;=&#32;Adj.</emphasis>
26 
27 &#32;&#32;<link linkend="class_optimization_algorithm">OptimizationAlgorithm&lt;double&gt;</link>*&#32;oa;
28 
29 &#32;&#32;FDOptimization(<link linkend="class_waveguide">Waveguide</link>*&#32;waveguide_primal,&#32;<link linkend="class_mesh_generator">MeshGenerator</link>*&#32;mg,
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;st_primal,
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_optimization_algorithm">OptimizationAlgorithm&lt;double&gt;</link>*&#32;oa);
32 
33 &#32;&#32;~FDOptimization();
34 
35 &#32;&#32;std::vector&lt;double&gt;&#32;compute_small_step(<emphasis class="keywordtype">double</emphasis>&#32;step);
36 
37 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;compute_big_step(std::vector&lt;double&gt;&#32;step);
38 
39 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;evaluate();<emphasis class="comment"></emphasis>
40 <emphasis class="comment">&#32;&#32;/**</emphasis>
41 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;advantage&#32;of&#32;this&#32;formulation&#32;is&#32;the&#32;fact,&#32;that&#32;we&#32;don&apos;t&#32;need&#32;to</emphasis>
42 <emphasis class="comment">&#32;&#32;&#32;*&#32;differentiate&#32;between&#32;a&#32;&apos;normal&apos;&#32;forward&#32;problem&#32;and&#32;it&apos;s&#32;dual&#32;which&#32;(in&#32;a</emphasis>
43 <emphasis class="comment">&#32;&#32;&#32;*&#32;parallel&#32;computation)&#32;holds&#32;some&#32;difficulties.&#32;We&#32;can&#32;simply&#32;adapt&#32;the</emphasis>
44 <emphasis class="comment">&#32;&#32;&#32;*&#32;shape&#32;parameters&#32;to&#32;account&#32;for&#32;the&#32;change&#32;in&#32;one&#32;component&#32;and&#32;rerun&#32;the</emphasis>
45 <emphasis class="comment">&#32;&#32;&#32;*&#32;solver&#32;and&#32;assembly&#32;process.</emphasis>
46 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
47 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;run();
48 
49 &#32;&#32;<link linkend="class_waveguide">Waveguide</link>*&#32;waveguide;
50 
51 &#32;&#32;<link linkend="class_mesh_generator">MeshGenerator</link>*&#32;mg;
52 
53 &#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;st;
54 };
55 
56 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
