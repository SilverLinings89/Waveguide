<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_adjoint_optimization_8h">
    <title>AdjointOptimization.h File Reference</title>
    <programlisting>#include &quot;../Core/Waveguide.h&quot;</programlisting>
    <programlisting>#include &quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</programlisting>
    <programlisting>#include &quot;Optimization.h&quot;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_adjoint_optimization">AdjointOptimization</link></para>
<para><emphasis>Derived from the Optimization class, this class implements an
Optimization-scheme based on an adjoint method.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/OptimizationStrategies/AdjointOptimization.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;AdjointOptimization_H_</emphasis>
2 <emphasis class="preprocessor">#define&#32;AdjointOptimization_H_</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&quot;../Core/Waveguide.h&quot;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&quot;../OptimizationAlgorithm/OptimizationAlgorithm.h&quot;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&quot;Optimization.h&quot;</emphasis>
7 
8 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
9 <emphasis class="comment"></emphasis>
10 <emphasis class="comment">/**</emphasis>
11 <emphasis class="comment">&#32;*&#32;\class&#32;AdjointOptimization</emphasis>
12 <emphasis class="comment">&#32;*&#32;\brief&#32;Derived&#32;from&#32;the&#32;Optimization&#32;class,&#32;this&#32;class&#32;implements&#32;an</emphasis>
13 <emphasis class="comment">&#32;*&#32;Optimization-scheme&#32;based&#32;on&#32;an&#32;adjoint&#32;method.</emphasis>
14 <emphasis class="comment">&#32;*</emphasis>
15 <emphasis class="comment">&#32;*&#32;This&#32;method&#32;should&#32;prove&#32;to&#32;be&#32;far&#32;superior&#32;to&#32;a&#32;finite&#32;difference&#32;approach</emphasis>
16 <emphasis class="comment">&#32;*&#32;as&#32;soon&#32;as&#32;the&#32;shape&#32;has&#32;more&#32;then&#32;2&#32;degrees&#32;of&#32;freedom&#32;since&#32;its&#32;effort&#32;is</emphasis>
17 <emphasis class="comment">&#32;*&#32;always&#32;a&#32;total&#32;of&#32;2&#32;forward&#32;problems&#32;to&#32;solve.&#32;\author&#32;Pascal&#32;Kraft</emphasis>
18 <emphasis class="comment">&#32;*&#32;\date&#32;29.11.2016</emphasis>
19 <emphasis class="comment">&#32;*/</emphasis>
<link linkend="class_adjoint_optimization">20 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_adjoint_optimization">AdjointOptimization</link>&#32;:&#32;<emphasis class="keyword">public</emphasis>&#32;<link linkend="class_optimization">Optimization</link>&#32;{
21 &#32;<emphasis class="keyword">public</emphasis>:
22 &#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;type&#32;=
23 &#32;&#32;&#32;&#32;&#32;&#32;1;&#32;&#32;<emphasis class="comment">//&#32;Allows&#32;callers&#32;to&#32;identify&#32;the&#32;exact&#32;type&#32;easily.&#32;0&#32;=&#32;FD,&#32;1&#32;=&#32;Adj.</emphasis>
24 
25 &#32;&#32;<link linkend="class_adjoint_optimization">AdjointOptimization</link>(<link linkend="class_waveguide">Waveguide</link>*&#32;waveguide_primal,&#32;<link linkend="class_mesh_generator">MeshGenerator</link>*&#32;mg,
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;st_primal,
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;st_dual,
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_optimization_algorithm">OptimizationAlgorithm</link>&lt;std::complex&lt;double&gt;&gt;*&#32;Oa);
29 
30 &#32;&#32;~<link linkend="class_adjoint_optimization">AdjointOptimization</link>();
31 
32 &#32;&#32;std::vector&lt;std::complex&lt;double&gt;&gt;&#32;compute_small_step(<emphasis class="keywordtype">double</emphasis>&#32;step);
33 
34 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;compute_big_step(std::vector&lt;double&gt;&#32;step);
35 
36 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;run();
37 
38 &#32;&#32;<link linkend="class_waveguide">Waveguide</link>*&#32;waveguide;
39 
40 &#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;primal_st;
41 &#32;&#32;<link linkend="class_space_transformation">SpaceTransformation</link>*&#32;dual_st;
42 
43 &#32;&#32;<link linkend="class_mesh_generator">MeshGenerator</link>*&#32;mg;
44 
45 &#32;&#32;<link linkend="class_optimization_algorithm">OptimizationAlgorithm&lt;std::complex&lt;double&gt;</link>&gt;*&#32;oa;
46 };
47 
48 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
