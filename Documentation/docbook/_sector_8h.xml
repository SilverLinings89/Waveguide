<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sector_8h">
    <title>Sector.h File Reference</title>
    <programlisting>#include &lt;deal.II/base/tensor.h&gt;</programlisting>
    <programlisting>#include &quot;../Core/Waveguide.h&quot;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_sector">Sector</link></para>
<para><emphasis>Sectors are used, to split the computational domain into chunks, whose
degrees of freedom are likely coupled.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/Core/Sector.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;SectorFlagH</emphasis>
2 <emphasis class="preprocessor">#define&#32;SectorFlagH</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/tensor.h&gt;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&quot;../Core/Waveguide.h&quot;</emphasis>
6 
7 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/tensor.h&gt;</emphasis>
8 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
9 <emphasis class="comment"></emphasis>
10 <emphasis class="comment">/**</emphasis>
11 <emphasis class="comment">&#32;*&#32;\class&#32;Sector</emphasis>
12 <emphasis class="comment">&#32;*&#32;\brief&#32;Sectors&#32;are&#32;used,&#32;to&#32;split&#32;the&#32;computational&#32;domain&#32;into&#32;chunks,&#32;whose</emphasis>
13 <emphasis class="comment">&#32;*&#32;degrees&#32;of&#32;freedom&#32;are&#32;likely&#32;coupled.</emphasis>
14 <emphasis class="comment">&#32;*</emphasis>
15 <emphasis class="comment">&#32;*&#32;The&#32;interfaces&#32;between&#32;Sectors&#32;lie&#32;in&#32;the&#32;xy-plane&#32;and&#32;they&#32;are&#32;ordered&#32;by</emphasis>
16 <emphasis class="comment">&#32;*&#32;their&#32;z-value.&#32;\author&#32;Pascal&#32;Kraft&#32;\date&#32;17.12.2015</emphasis>
17 <emphasis class="comment">&#32;*/</emphasis>
18 <emphasis class="keyword">template</emphasis>&#32;&lt;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;Dofs_Per_Sector&gt;
<link linkend="class_sector">19 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_sector">Sector</link>&#32;{
20 &#32;<emphasis class="keyword">public</emphasis>:<emphasis class="comment"></emphasis>
21 <emphasis class="comment">&#32;&#32;/**</emphasis>
22 <emphasis class="comment">&#32;&#32;&#32;*&#32;Constructor&#32;of&#32;the&#32;Sector&#32;class,&#32;that&#32;takes&#32;all&#32;important&#32;properties&#32;as&#32;an</emphasis>
23 <emphasis class="comment">&#32;&#32;&#32;*&#32;input&#32;property.&#32;\param&#32;in_left&#32;stores&#32;if&#32;the&#32;sector&#32;is&#32;at&#32;the&#32;left&#32;end.&#32;It</emphasis>
24 <emphasis class="comment">&#32;&#32;&#32;*&#32;is&#32;used&#32;to&#32;initialize&#32;the&#32;according&#32;variable.&#32;\param&#32;in_right&#32;stores&#32;if&#32;the</emphasis>
25 <emphasis class="comment">&#32;&#32;&#32;*&#32;sector&#32;is&#32;at&#32;the&#32;right&#32;end.&#32;It&#32;is&#32;used&#32;to&#32;initialize&#32;the&#32;according</emphasis>
26 <emphasis class="comment">&#32;&#32;&#32;*&#32;variable.&#32;\param&#32;in_z_0&#32;stores&#32;the&#32;z-coordinate&#32;of&#32;the&#32;left&#32;surface-plain.</emphasis>
27 <emphasis class="comment">&#32;&#32;&#32;*&#32;It&#32;is&#32;used&#32;to&#32;initialize&#32;the&#32;according&#32;variable.&#32;\param&#32;in_z_1&#32;stores&#32;the</emphasis>
28 <emphasis class="comment">&#32;&#32;&#32;*&#32;z-coordinate&#32;of&#32;the&#32;right&#32;surface-plain.&#32;It&#32;is&#32;used&#32;to&#32;initialize&#32;the</emphasis>
29 <emphasis class="comment">&#32;&#32;&#32;*&#32;according&#32;variable.</emphasis>
30 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
31 &#32;&#32;<link linkend="class_sector">Sector</link>(<emphasis class="keywordtype">bool</emphasis>&#32;in_left,&#32;<emphasis class="keywordtype">bool</emphasis>&#32;in_right,&#32;<emphasis class="keywordtype">double</emphasis>&#32;in_z_0,&#32;<emphasis class="keywordtype">double</emphasis>&#32;in_z_1);
32 
33 &#32;&#32;~<link linkend="class_sector">Sector</link>();
34 <emphasis class="comment"></emphasis>
35 <emphasis class="comment">&#32;&#32;/**</emphasis>
36 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;value&#32;describes,&#32;if&#32;this&#32;Sector&#32;is&#32;at&#32;the&#32;left&#32;(small&#32;z)&#32;end&#32;of&#32;the</emphasis>
37 <emphasis class="comment">&#32;&#32;&#32;*&#32;computational&#32;domain.</emphasis>
38 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
<link linkend="class_sector_1a5086c099e7bc0bcd921596f3f097c134">39 </link>&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_sector_1a5086c099e7bc0bcd921596f3f097c134">left</link>;<emphasis class="comment"></emphasis>
40 <emphasis class="comment">&#32;&#32;/**</emphasis>
41 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;value&#32;describes,&#32;if&#32;this&#32;Sector&#32;is&#32;at&#32;the&#32;right&#32;(large&#32;z)&#32;end&#32;of&#32;the</emphasis>
42 <emphasis class="comment">&#32;&#32;&#32;*&#32;computational&#32;domain.</emphasis>
43 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
<link linkend="class_sector_1a719bee5389220c7c80c103db57480cd5">44 </link>&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_sector_1a719bee5389220c7c80c103db57480cd5">right</link>;<emphasis class="comment"></emphasis>
45 <emphasis class="comment">&#32;&#32;/**</emphasis>
46 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;value&#32;is&#32;true,&#32;if&#32;either&#32;left&#32;or&#32;right&#32;are&#32;true.</emphasis>
47 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
<link linkend="class_sector_1ae133023d7f883100b31286d6857b1fbf">48 </link>&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">bool</emphasis>&#32;<link linkend="class_sector_1ae133023d7f883100b31286d6857b1fbf">boundary</link>;
49 
50 &#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;z_0;
51 <emphasis class="comment"></emphasis>
52 <emphasis class="comment">&#32;&#32;/**</emphasis>
53 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;objects&#32;created&#32;from&#32;this&#32;class&#32;are&#32;supposed&#32;to&#32;hand&#32;back&#32;the&#32;material</emphasis>
54 <emphasis class="comment">&#32;&#32;&#32;*&#32;properties&#32;which&#32;include&#32;the&#32;space-transformation&#32;Tensors.&#32;For&#32;this&#32;to&#32;be</emphasis>
55 <emphasis class="comment">&#32;&#32;&#32;*&#32;possible,&#32;the&#32;Sector&#32;has&#32;to&#32;be&#32;able&#32;to&#32;transform&#32;from&#32;global&#32;coordinates&#32;to</emphasis>
56 <emphasis class="comment">&#32;&#32;&#32;*&#32;coordinates&#32;that&#32;are&#32;scaled&#32;inside&#32;the&#32;Sector.&#32;For&#32;this&#32;purpose,&#32;the&#32;z_0</emphasis>
57 <emphasis class="comment">&#32;&#32;&#32;*&#32;and&#32;z_1&#32;variables&#32;store&#32;the&#32;z-coordinate&#32;of&#32;both,&#32;the&#32;left&#32;and&#32;right</emphasis>
58 <emphasis class="comment">&#32;&#32;&#32;*&#32;surface.</emphasis>
59 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
<link linkend="class_sector_1aed9840b71fbd4108e0ef000758f01d78">60 </link>&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;<emphasis class="keywordtype">double</emphasis>&#32;<link linkend="class_sector_1aed9840b71fbd4108e0ef000758f01d78">z_1</link>;
61 <emphasis class="comment"></emphasis>
62 <emphasis class="comment">&#32;&#32;/**</emphasis>
63 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;method&#32;gets&#32;called&#32;from&#32;the&#32;WaveguideStructure&#32;object&#32;used&#32;in&#32;the</emphasis>
64 <emphasis class="comment">&#32;&#32;&#32;*&#32;simulation.&#32;This&#32;is&#32;where&#32;the&#32;Waveguide&#32;object&#32;gets&#32;the&#32;material&#32;Tensors&#32;to</emphasis>
65 <emphasis class="comment">&#32;&#32;&#32;*&#32;build&#32;the&#32;system-matrix.&#32;This&#32;method&#32;returns&#32;a&#32;complex-values&#32;Matrix</emphasis>
66 <emphasis class="comment">&#32;&#32;&#32;*&#32;containing&#32;the&#32;system-tensors&#32;\f$\boldsymbol{\mu^{-1}}&#32;\f$&#32;and</emphasis>
67 <emphasis class="comment">&#32;&#32;&#32;*&#32;\f$\boldsymbol{\epsilon}&#32;\f$.&#32;\param&#32;in_x&#32;x-coordinate&#32;of&#32;the&#32;point,&#32;for</emphasis>
68 <emphasis class="comment">&#32;&#32;&#32;*&#32;which&#32;the&#32;Tensor&#32;should&#32;be&#32;calculated.&#32;\param&#32;in_y&#32;y-coordinate&#32;of&#32;the</emphasis>
69 <emphasis class="comment">&#32;&#32;&#32;*&#32;point,&#32;for&#32;which&#32;the&#32;Tensor&#32;should&#32;be&#32;calculated.&#32;\param&#32;in_z&#32;z-coordinate</emphasis>
70 <emphasis class="comment">&#32;&#32;&#32;*&#32;of&#32;the&#32;point,&#32;for&#32;which&#32;the&#32;Tensor&#32;should&#32;be&#32;calculated.</emphasis>
71 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
72 &#32;&#32;Tensor&lt;2,&#32;3,&#32;double&gt;&#32;TransformationTensorInternal(<emphasis class="keywordtype">double</emphasis>&#32;in_x,&#32;<emphasis class="keywordtype">double</emphasis>&#32;in_y,
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;in_z)&#32;<emphasis class="keyword">const</emphasis>;
74 <emphasis class="comment"></emphasis>
75 <emphasis class="comment">&#32;&#32;/**</emphasis>
76 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;used&#32;during&#32;the&#32;optimization-operation&#32;to&#32;update&#32;the</emphasis>
77 <emphasis class="comment">&#32;&#32;&#32;*&#32;properties&#32;of&#32;the&#32;space-transformation.&#32;However,&#32;to&#32;ensure,&#32;that&#32;the</emphasis>
78 <emphasis class="comment">&#32;&#32;&#32;*&#32;boundary-conditions&#32;remain&#32;intact,&#32;this&#32;function&#32;cannot&#32;edit&#32;the&#32;left</emphasis>
79 <emphasis class="comment">&#32;&#32;&#32;*&#32;defrees&#32;of&#32;freedom&#32;if&#32;left&#32;is&#32;true&#32;and&#32;it&#32;cannot&#32;edit&#32;the&#32;right&#32;degrees&#32;of</emphasis>
80 <emphasis class="comment">&#32;&#32;&#32;*&#32;freedom&#32;if&#32;right&#32;is&#32;true</emphasis>
81 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
82 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;set_properties(<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>);
83 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;set_properties(<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>);
84 <emphasis class="comment"></emphasis>
85 <emphasis class="comment">&#32;&#32;/**</emphasis>
86 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;is&#32;the&#32;same&#32;as&#32;set_properties&#32;with&#32;the&#32;difference&#32;of&#32;being</emphasis>
87 <emphasis class="comment">&#32;&#32;&#32;*&#32;able&#32;to&#32;change&#32;the&#32;values&#32;of&#32;the&#32;input-&#32;and&#32;output&#32;boundary.</emphasis>
88 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
89 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;set_properties_force(<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>);
90 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;set_properties_force(<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>,&#32;<emphasis class="keywordtype">double</emphasis>);<emphasis class="comment"></emphasis>
91 <emphasis class="comment">&#32;&#32;/**</emphasis>
92 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;values&#32;of&#32;Q1,&#32;Q2&#32;and&#32;Q3&#32;are&#32;needed&#32;to&#32;compute&#32;the&#32;solution&#32;in&#32;real</emphasis>
93 <emphasis class="comment">&#32;&#32;&#32;*&#32;coordinates&#32;from&#32;the&#32;one&#32;in&#32;trnsformed&#32;coordinates.&#32;This&#32;function&#32;returnes</emphasis>
94 <emphasis class="comment">&#32;&#32;&#32;*&#32;Q1&#32;for&#32;a&#32;given&#32;position&#32;and&#32;the&#32;current&#32;transformation.</emphasis>
95 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
96 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;getQ1(<emphasis class="keywordtype">double</emphasis>)&#32;<emphasis class="keyword">const</emphasis>;<emphasis class="comment"></emphasis>
97 <emphasis class="comment">&#32;&#32;/**</emphasis>
98 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;values&#32;of&#32;Q1,&#32;Q2&#32;and&#32;Q3&#32;are&#32;needed&#32;to&#32;compute&#32;the&#32;solution&#32;in&#32;real</emphasis>
99 <emphasis class="comment">&#32;&#32;&#32;*&#32;coordinates&#32;from&#32;the&#32;one&#32;in&#32;transformed&#32;coordinates.&#32;This&#32;function&#32;returnes</emphasis>
100 <emphasis class="comment">&#32;&#32;&#32;*&#32;Q2&#32;for&#32;a&#32;given&#32;position&#32;and&#32;the&#32;current&#32;transformation.</emphasis>
101 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
102 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;getQ2(<emphasis class="keywordtype">double</emphasis>)&#32;<emphasis class="keyword">const</emphasis>;<emphasis class="comment"></emphasis>
103 <emphasis class="comment">&#32;&#32;/**</emphasis>
104 <emphasis class="comment">&#32;&#32;&#32;*&#32;The&#32;values&#32;of&#32;Q1,&#32;Q2&#32;and&#32;Q3&#32;are&#32;needed&#32;to&#32;compute&#32;the&#32;solution&#32;in&#32;real</emphasis>
105 <emphasis class="comment">&#32;&#32;&#32;*&#32;coordinates&#32;from&#32;the&#32;one&#32;in&#32;transformed&#32;coordinates.&#32;This&#32;function&#32;returnes</emphasis>
106 <emphasis class="comment">&#32;&#32;&#32;*&#32;Q3&#32;for&#32;a&#32;given&#32;position&#32;and&#32;the&#32;current&#32;transformation.</emphasis>
107 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
108 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;getQ3(<emphasis class="keywordtype">double</emphasis>)&#32;<emphasis class="keyword">const</emphasis>;
109 <emphasis class="comment"></emphasis>
110 <emphasis class="comment">&#32;&#32;/**</emphasis>
111 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;returns&#32;the&#32;number&#32;of&#32;the&#32;lowest&#32;degree&#32;of&#32;freedom&#32;associated</emphasis>
112 <emphasis class="comment">&#32;&#32;&#32;*&#32;with&#32;this&#32;Sector.&#32;Keep&#32;in&#32;mind,&#32;that&#32;the&#32;degrees&#32;of&#32;freedom&#32;associated&#32;with</emphasis>
113 <emphasis class="comment">&#32;&#32;&#32;*&#32;edges&#32;on&#32;the&#32;lower&#32;(small&#32;\f$&#32;z&#32;\f$)&#32;interface&#32;are&#32;not&#32;included&#32;since&#32;this</emphasis>
114 <emphasis class="comment">&#32;&#32;&#32;*&#32;functionality&#32;is&#32;supposed&#32;to&#32;help&#32;in&#32;the&#32;block-structure&#32;generation&#32;and</emphasis>
115 <emphasis class="comment">&#32;&#32;&#32;*&#32;those&#32;dofs&#32;are&#32;part&#32;of&#32;the&#32;neighboring&#32;block.</emphasis>
116 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
117 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;getLowestDof()&#32;<emphasis class="keyword">const</emphasis>;
118 <emphasis class="comment"></emphasis>
119 <emphasis class="comment">&#32;&#32;/**</emphasis>
120 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;returns&#32;the&#32;number&#32;of&#32;dofs&#32;which&#32;are&#32;part&#32;of&#32;this&#32;sector.&#32;The</emphasis>
121 <emphasis class="comment">&#32;&#32;&#32;*&#32;same&#32;remarks&#32;as&#32;for&#32;getLowestDof()&#32;apply.</emphasis>
122 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
123 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;getNDofs()&#32;<emphasis class="keyword">const</emphasis>;
124 <emphasis class="comment"></emphasis>
125 <emphasis class="comment">&#32;&#32;/**</emphasis>
126 <emphasis class="comment">&#32;&#32;&#32;*&#32;In&#32;order&#32;to&#32;set&#32;appropriate&#32;boundary&#32;conditions&#32;it&#32;makes&#32;sense&#32;to</emphasis>
127 <emphasis class="comment">&#32;&#32;&#32;*&#32;determine,&#32;which&#32;degrees&#32;are&#32;associated&#32;with&#32;an&#32;edge&#32;which&#32;is&#32;part&#32;of&#32;an</emphasis>
128 <emphasis class="comment">&#32;&#32;&#32;*&#32;interface&#32;to&#32;another&#32;sector.&#32;Due&#32;to&#32;the&#32;reordering&#32;of&#32;dofs&#32;this&#32;is</emphasis>
129 <emphasis class="comment">&#32;&#32;&#32;*&#32;especially&#32;easy&#32;since&#32;the&#32;dofs&#32;on&#32;the&#32;interface&#32;are&#32;those&#32;in&#32;the&#32;interval</emphasis>
130 <emphasis class="comment">&#32;&#32;&#32;*&#32;\f[[\,\operatorname{LowestDof}&#32;+&#32;\operatorname{NDofs}&#32;-</emphasis>
131 <emphasis class="comment">&#32;&#32;&#32;*&#32;\operatorname{NInternalBoundaryDofs}\,&#32;,&#32;\,&#32;&#32;\operatorname{LowestDof}&#32;+</emphasis>
132 <emphasis class="comment">&#32;&#32;&#32;*&#32;\operatorname{NDofs}\,]\f]</emphasis>
133 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
134 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;getNInternalBoundaryDofs()&#32;<emphasis class="keyword">const</emphasis>;
135 <emphasis class="comment"></emphasis>
136 <emphasis class="comment">&#32;&#32;/**</emphasis>
137 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;can&#32;be&#32;used&#32;to&#32;query&#32;the&#32;number&#32;of&#32;cells&#32;in&#32;a&#32;Sector&#32;/</emphasis>
138 <emphasis class="comment">&#32;&#32;&#32;*&#32;subdomain.&#32;In&#32;this&#32;case&#32;there&#32;are&#32;no&#32;problems&#32;with&#32;interface-dofs.&#32;Every</emphasis>
139 <emphasis class="comment">&#32;&#32;&#32;*&#32;cell&#32;belongs&#32;to&#32;exactly&#32;one&#32;sector&#32;(the&#32;problem&#32;arises&#32;from&#32;the&#32;fact,&#32;that</emphasis>
140 <emphasis class="comment">&#32;&#32;&#32;*&#32;one&#32;edge&#32;can&#32;(and&#32;most&#32;of&#32;the&#32;time&#32;will)&#32;belong&#32;to&#32;more&#32;then&#32;one&#32;cell).</emphasis>
141 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
142 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;getNActiveCells()&#32;<emphasis class="keyword">const</emphasis>;
143 <emphasis class="comment"></emphasis>
144 <emphasis class="comment">&#32;&#32;/**</emphasis>
145 <emphasis class="comment">&#32;&#32;&#32;*&#32;Setter&#32;for&#32;the&#32;value&#32;that&#32;the&#32;getter&#32;should&#32;return.&#32;Called&#32;after</emphasis>
146 <emphasis class="comment">&#32;&#32;&#32;*&#32;Dof-reordering.</emphasis>
147 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
148 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;setLowestDof(<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>);
149 <emphasis class="comment"></emphasis>
150 <emphasis class="comment">&#32;&#32;/**</emphasis>
151 <emphasis class="comment">&#32;&#32;&#32;*&#32;Setter&#32;for&#32;the&#32;value&#32;that&#32;the&#32;getter&#32;should&#32;return.&#32;Called&#32;after</emphasis>
152 <emphasis class="comment">&#32;&#32;&#32;*&#32;Dof-reordering.</emphasis>
153 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
154 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;setNDofs(<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>);
155 <emphasis class="comment"></emphasis>
156 <emphasis class="comment">&#32;&#32;/**</emphasis>
157 <emphasis class="comment">&#32;&#32;&#32;*&#32;Setter&#32;for&#32;the&#32;value&#32;that&#32;the&#32;getter&#32;should&#32;return.&#32;Called&#32;after</emphasis>
158 <emphasis class="comment">&#32;&#32;&#32;*&#32;Dof-reordering.</emphasis>
159 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
160 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;setNInternalBoundaryDofs(<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>);
161 <emphasis class="comment"></emphasis>
162 <emphasis class="comment">&#32;&#32;/**</emphasis>
163 <emphasis class="comment">&#32;&#32;&#32;*&#32;Setter&#32;for&#32;the&#32;value&#32;that&#32;the&#32;getter&#32;should&#32;return.&#32;Called&#32;after</emphasis>
164 <emphasis class="comment">&#32;&#32;&#32;*&#32;Dof-reordering.</emphasis>
165 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
166 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;setNActiveCells(<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>);
167 <emphasis class="comment"></emphasis>
168 <emphasis class="comment">&#32;&#32;/**</emphasis>
169 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;function&#32;returns&#32;the&#32;value&#32;of&#32;a&#32;specified&#32;dof&#32;at&#32;a&#32;given&#32;internal</emphasis>
170 <emphasis class="comment">&#32;&#32;&#32;*&#32;position.&#32;\param&#32;i&#32;index&#32;of&#32;the&#32;dof.&#32;This&#32;class&#32;has&#32;a&#32;template&#32;argument</emphasis>
171 <emphasis class="comment">&#32;&#32;&#32;*&#32;specifying&#32;the&#32;number&#32;of&#32;dofs&#32;per&#32;sector.&#32;This&#32;argument&#32;has&#32;to&#32;be&#32;less&#32;or</emphasis>
172 <emphasis class="comment">&#32;&#32;&#32;*&#32;equal.&#32;\param&#32;z&#32;this&#32;is&#32;a&#32;relative&#32;value&#32;for&#32;interpolation&#32;with&#32;\f$z&#32;\in</emphasis>
173 <emphasis class="comment">&#32;&#32;&#32;*&#32;[0,1]\f$.&#32;If&#32;\f$z&#32;=&#32;0\f$&#32;the&#32;values&#32;for&#32;the&#32;lower&#32;end&#32;of&#32;the&#32;sector&#32;are</emphasis>
174 <emphasis class="comment">&#32;&#32;&#32;*&#32;returned.&#32;If&#32;\f$z=1\f$&#32;the&#32;values&#32;for&#32;the&#32;upper&#32;end&#32;of&#32;the&#32;sector&#32;are</emphasis>
175 <emphasis class="comment">&#32;&#32;&#32;*&#32;returned.&#32;In&#32;between&#32;the&#32;values&#32;are&#32;interpolated&#32;according&#32;to&#32;the&#32;rules&#32;for</emphasis>
176 <emphasis class="comment">&#32;&#32;&#32;*&#32;the&#32;specific&#32;dof.</emphasis>
177 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
178 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;get_dof(<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;i,&#32;<emphasis class="keywordtype">double</emphasis>&#32;z)&#32;<emphasis class="keyword">const</emphasis>;
179 <emphasis class="comment"></emphasis>
180 <emphasis class="comment">&#32;&#32;/**</emphasis>
181 <emphasis class="comment">&#32;&#32;&#32;*&#32;Get&#32;an&#32;interpolation&#32;of&#32;the&#32;radius&#32;for&#32;a&#32;coordinate&#32;z</emphasis>
182 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;double&#32;z&#32;is&#32;the&#32;\f$z&#32;\in&#32;[0,1]\f$&#32;coordinate&#32;for&#32;the&#32;interpolation.</emphasis>
183 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
184 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;get_r(<emphasis class="keywordtype">double</emphasis>&#32;z)&#32;<emphasis class="keyword">const</emphasis>;
185 <emphasis class="comment"></emphasis>
186 <emphasis class="comment">&#32;&#32;/**</emphasis>
187 <emphasis class="comment">&#32;&#32;&#32;*&#32;Get&#32;an&#32;interpolation&#32;of&#32;the&#32;tilt&#32;for&#32;a&#32;coordinate&#32;z</emphasis>
188 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;double&#32;z&#32;is&#32;the&#32;\f$z&#32;\in&#32;[0,1]\f$&#32;coordinate&#32;for&#32;the&#32;interpolation.</emphasis>
189 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
190 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;get_v(<emphasis class="keywordtype">double</emphasis>&#32;z)&#32;<emphasis class="keyword">const</emphasis>;
191 <emphasis class="comment"></emphasis>
192 <emphasis class="comment">&#32;&#32;/**</emphasis>
193 <emphasis class="comment">&#32;&#32;&#32;*&#32;Get&#32;an&#32;interpolation&#32;of&#32;the&#32;shift&#32;for&#32;a&#32;coordinate&#32;z</emphasis>
194 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;double&#32;z&#32;is&#32;the&#32;\f$z&#32;\in&#32;[0,1]\f$&#32;coordinate&#32;for&#32;the&#32;interpolation.</emphasis>
195 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
196 &#32;&#32;<emphasis class="keywordtype">double</emphasis>&#32;get_m(<emphasis class="keywordtype">double</emphasis>&#32;z)&#32;<emphasis class="keyword">const</emphasis>;
197 
198 &#32;&#32;<emphasis class="comment">//&#32;private:</emphasis>
199 
200 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;LowestDof,&#32;NDofs,&#32;NInternalBoundaryDofs,&#32;NActiveCells;
201 
202 &#32;&#32;<emphasis class="comment">//&#32;Stores&#32;the&#32;values&#32;of&#32;the&#32;left&#32;degrees&#32;of&#32;freedom.&#32;These&#32;are&#32;the&#32;values&#32;of</emphasis>
203 &#32;&#32;<emphasis class="comment">//&#32;the&#32;dofs&#32;on&#32;the&#32;surface&#32;of&#32;the&#32;sector&#32;towards&#32;z--&gt;&#32;-\infty.</emphasis>
204 &#32;&#32;<emphasis class="keywordtype">double</emphasis>*&#32;dofs_l;
205 
206 &#32;&#32;<emphasis class="comment">//&#32;Stores&#32;the&#32;values&#32;of&#32;the&#32;right&#32;degrees&#32;of&#32;freedom.&#32;These&#32;are&#32;the&#32;values&#32;of</emphasis>
207 &#32;&#32;<emphasis class="comment">//&#32;the&#32;dofs&#32;on&#32;the&#32;surface&#32;of&#32;the&#32;sector&#32;towards&#32;z--&gt;&#32;\infty.</emphasis>
208 &#32;&#32;<emphasis class="keywordtype">double</emphasis>*&#32;dofs_r;
209 
210 &#32;&#32;<emphasis class="comment">//&#32;&#32;This&#32;stores&#32;the&#32;indices&#32;for&#32;derivative&#32;dpendence.&#32;For&#32;example:&#32;If&#32;the</emphasis>
211 &#32;&#32;<emphasis class="comment">//&#32;&#32;third&#32;dof&#32;is&#32;the&#32;dof&#32;type&#32;&apos;m&apos;&#32;(in&#32;former&#32;nomenclature)&#32;and&#32;the&#32;second&#32;is</emphasis>
212 &#32;&#32;<emphasis class="comment">//&#32;&#32;of&#32;type&#32;&apos;v&apos;&#32;so&#32;v&#32;should&#32;be&#32;the&#32;derivative&#32;of&#32;&apos;m&apos;&#32;then&#32;the&#32;derivative[3]=2.</emphasis>
213 &#32;&#32;<emphasis class="comment">//&#32;&#32;This&#32;is&#32;used&#32;in&#32;the&#32;function&#32;get_dof.</emphasis>
214 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>*&#32;derivative;
215 
216 &#32;&#32;<emphasis class="comment">//&#32;this&#32;stores&#32;for&#32;any&#32;dof&#32;if&#32;it&#32;has&#32;zero_derivative&#32;(at&#32;sector&#32;interfaces)&#32;or</emphasis>
217 &#32;&#32;<emphasis class="comment">//&#32;not.</emphasis>
218 &#32;&#32;<emphasis class="keywordtype">bool</emphasis>*&#32;zero_derivative;
219 };
220 
221 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
