<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_preconditioner_sweeping_8h">
    <title>PreconditionerSweeping.h File Reference</title>
    <programlisting>#include &lt;deal.II/base/config.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/base/index_set.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/exceptions.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/trilinos_parallel_block_vector.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/trilinos_precondition.h&gt;</programlisting>
    <programlisting>#include &lt;deal.II/lac/vector.h&gt;</programlisting>
    <programlisting>#include &quot;Waveguide.h&quot;</programlisting>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_preconditioner_sweeping">PreconditionerSweeping</link></para>
<para><emphasis>This class implements the DealII preconditioner interface and offers a
 sweeping preconditioning mechanism.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>dealii::SolverControl <link linkend="_preconditioner_sweeping_8h_1a81188d983262fe7f52756d9c1759fa3a">s</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>dealii::SparseDirectUMFPACK * <link linkend="_preconditioner_sweeping_8h_1ab66dbaf2176efb1ae21d951b760e1f35">solver</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>dealii::SparsityPattern <link linkend="_preconditioner_sweeping_8h_1ae31e26f8bce76038a3b1acd626b11d26">sparsity_pattern</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>dealii::SparsityPattern <link linkend="_preconditioner_sweeping_8h_1a46cc748604d09e3810d8a5e1917a89ab">off_diag_block_lower</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>dealii::SparsityPattern <link linkend="_preconditioner_sweeping_8h_1a832e3db088e27e801beb606f63e1b399">off_diag_block_upper</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/Core/PreconditionerSweeping.h</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="comment">//&#32;Copyright&#32;2018&#32;Pascal&#32;Kraft</emphasis>
2 <emphasis class="preprocessor">#ifndef&#32;CODE_CORE_PRECONDITIONERSWEEPING_H_</emphasis>
3 <emphasis class="preprocessor">#define&#32;CODE_CORE_PRECONDITIONERSWEEPING_H_</emphasis>
4 
5 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/config.h&gt;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&lt;deal.II/base/index_set.h&gt;</emphasis>
7 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/exceptions.h&gt;</emphasis>
8 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/trilinos_parallel_block_vector.h&gt;</emphasis>
9 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/trilinos_precondition.h&gt;</emphasis>
10 <emphasis class="preprocessor">#include&#32;&lt;deal.II/lac/vector.h&gt;</emphasis>
11 <emphasis class="preprocessor">#include&#32;&quot;Waveguide.h&quot;</emphasis>
12 
13 <emphasis class="keyword">extern</emphasis>&#32;dealii::SolverControl&#32;s;
14 <emphasis class="keyword">extern</emphasis>&#32;dealii::SparseDirectUMFPACK&#32;*solver;
15 
16 <emphasis class="keyword">extern</emphasis>&#32;dealii::SparsityPattern&#32;sparsity_pattern,&#32;off_diag_block_lower,
17 &#32;&#32;&#32;&#32;off_diag_block_upper;
18 
19 <emphasis class="comment">//&#32;dealii::TrilinosWrappers::SolverDirect&#32;*&#32;solver;</emphasis>
20 <emphasis class="comment"></emphasis>
21 <emphasis class="comment">/**</emphasis>
22 <emphasis class="comment">&#32;*&#32;\class&#32;PreconditionerSweeping</emphasis>
23 <emphasis class="comment">&#32;*&#32;\brief&#32;This&#32;class&#32;implements&#32;the&#32;DealII&#32;preconditioner&#32;interface&#32;and&#32;offers&#32;a</emphasis>
24 <emphasis class="comment">&#32;*sweeping&#32;preconditioning&#32;mechanism.</emphasis>
25 <emphasis class="comment">&#32;*</emphasis>
26 <emphasis class="comment">&#32;*&#32;Details&#32;can&#32;be&#32;found&#32;in&#32;the&#32;paper&#32;&lt;a</emphasis>
27 <emphasis class="comment">&#32;*href=&quot;http://www.sciencedirect.com/science/article/pii/S0021999112000460&quot;&gt;A</emphasis>
28 <emphasis class="comment">&#32;*sweeping&#32;preconditioner&#32;for&#32;time-harmonic&#32;Maxwellâ€™s&#32;equations&#32;with&#32;finite</emphasis>
29 <emphasis class="comment">&#32;*elements&lt;/a&gt;.&#32;The&#32;general&#32;idea&#32;is&#32;as&#32;follows:&#32;Let&#32;\f$\Omega\f$&#32;be&#32;the</emphasis>
30 <emphasis class="comment">&#32;*computational&#32;domain&#32;(internally)&#32;truncated&#32;by&#32;an&#32;absorbing&#32;boundary</emphasis>
31 <emphasis class="comment">&#32;*condition.&#32;This&#32;domain&#32;can&#32;be&#32;split&#32;into&#32;&#32;layers&#32;along&#32;a&#32;direction&#32;(in&#32;our</emphasis>
32 <emphasis class="comment">&#32;*case&#32;\f$&#32;z&#32;\f$&#32;&#32;and&#32;triangulated.&#32;We&#32;therefore&#32;have&#32;a&#32;triangulation&#32;spread</emphasis>
33 <emphasis class="comment">&#32;*across&#32;multiple&#32;processes.&#32;We&#32;chose&#32;the&#32;splitting&#32;such,&#32;that&#32;the&#32;degrees&#32;of</emphasis>
34 <emphasis class="comment">&#32;*freedom&#32;are&#32;ordered&#32;process-wise.&#32;Let&#32;\f$&#32;K&#32;\f$&#32;be&#32;the&#32;number&#32;of&#32;Layers&#32;and</emphasis>
35 <emphasis class="comment">&#32;*\f$&#32;T_i&#32;\quad&#32;\imath&#32;\in&#32;\{1,\ldots,K\}&#32;\f$&#32;the&#32;parts&#32;of&#32;the&#32;triangulation.</emphasis>
36 <emphasis class="comment">&#32;*&#32;For&#32;a&#32;PML&#32;function</emphasis>
37 <emphasis class="comment">&#32;*&#32;\f[</emphasis>
38 <emphasis class="comment">&#32;*&#32;\sigma_i&#32;(\xi)&#32;=&#32;\begin{cases}&#32;\theta&#32;\left(\frac{-1&#32;+(i-1)l&#32;-&#32;\xi}{l}</emphasis>
39 <emphasis class="comment">&#32;*\right)^2&#32;\quad&#32;&amp;\xi&#32;\in&#32;[-1&#32;+&#32;(i-2)l,&#32;-1&#32;+(i-1)l]&#32;\\&#32;0,&amp;&#32;\xi&#32;\in&#32;[-1&#32;+</emphasis>
40 <emphasis class="comment">&#32;*(i-1)l,&#32;1-l]&#32;\\&#32;\Theta\left(\frac{\xi&#32;-1&#32;+l}{l}\right)^2,&#32;&amp;&#32;\xi&#32;\in</emphasis>
41 <emphasis class="comment">&#32;*[1-l,1]\end{cases}&#32;\f]&#32;we&#32;now&#32;regard&#32;the&#32;problem&#32;\f[&#32;\nabla&#32;\times</emphasis>
42 <emphasis class="comment">&#32;*\tilde{\mu}_{r,i}^{-1}\nabla&#32;\times&#32;\boldsymbol{E}&#32;-</emphasis>
43 <emphasis class="comment">&#32;*\kappa^2\tilde{\epsilon}_{r,i}\boldsymbol{E}&#32;=&#32;0&#32;\quad&#32;\text{&#32;in&#32;}</emphasis>
44 <emphasis class="comment">&#32;*\mathrm{int}&#32;(\mathrm{T}_{i-1}\cup\mathrm{T}_i&#32;\f]&#32;where</emphasis>
45 <emphasis class="comment">&#32;*</emphasis>
46 <emphasis class="comment">&#32;*&#32;Described&#32;in&#32;words:&#32;We&#32;put&#32;a&#32;PML&#32;into&#32;the&#32;neighboring&#32;block&#32;of&#32;the&#32;block&#32;we</emphasis>
47 <emphasis class="comment">&#32;*want&#32;to&#32;precondition&#32;and&#32;setup&#32;the&#32;system&#32;matrix&#32;for&#32;this&#32;smaller&#32;problem.</emphasis>
48 <emphasis class="comment">&#32;*This&#32;matrix&#32;we&#32;can&#32;then&#32;invert&#32;and&#32;name&#32;the&#32;Operator&#32;\f$H_i^{-1}\f$.&#32;We&#32;then</emphasis>
49 <emphasis class="comment">&#32;*define&#32;the&#32;operator&#32;\f[&#32;S(\boldsymbol{v})&#32;=&#32;P_{0,n_i}H_i^{-1}&#32;(\boldsymbol{v}</emphasis>
50 <emphasis class="comment">&#32;*,&#32;\boldsymbol{0}))&#32;\f]&#32;where&#32;\f$&#32;P_{0,n_i}&#32;\f$&#32;describes&#32;the&#32;extraction&#32;of&#32;the</emphasis>
51 <emphasis class="comment">&#32;*first&#32;\f$&#32;n_i&#32;\f$&#32;components.&#32;For&#32;the&#32;one&#32;block&#32;which&#32;has&#32;no&#32;neighbor&#32;the</emphasis>
52 <emphasis class="comment">&#32;*inverse&#32;of&#32;the&#32;block&#32;of&#32;the&#32;system&#32;matrix&#32;can&#32;be&#32;used.&#32;The&#32;inversion&#32;does&#32;not</emphasis>
53 <emphasis class="comment">&#32;*have&#32;to&#32;be&#32;performed&#32;numerically&#32;-&#32;a&#32;decomposition&#32;(performed&#32;by&#32;UMFPACK&#32;or</emphasis>
54 <emphasis class="comment">&#32;*MUMPS)&#32;is&#32;sufficient.</emphasis>
55 <emphasis class="comment">&#32;*</emphasis>
56 <emphasis class="comment">&#32;*&#32;&#32;\date&#32;28.11.2016</emphasis>
57 <emphasis class="comment">&#32;*&#32;&#32;\author&#32;Pascal&#32;Kraft</emphasis>
58 <emphasis class="comment">&#32;**/</emphasis>
<link linkend="class_preconditioner_sweeping">59 </link><emphasis class="keyword">class&#32;</emphasis><link linkend="class_preconditioner_sweeping">PreconditionerSweeping</link>&#32;:&#32;dealii::TrilinosWrappers::PreconditionBase&#32;{
60 &#32;&#32;<emphasis class="keyword">using</emphasis>&#32;dealii::TrilinosWrappers::PreconditionBase::vmult;
61 
62 &#32;<emphasis class="keyword">public</emphasis>:<emphasis class="comment"></emphasis>
63 <emphasis class="comment">&#32;&#32;/**</emphasis>
64 <emphasis class="comment">&#32;&#32;&#32;*&#32;This&#32;constructor&#32;is&#32;the&#32;only&#32;one&#32;that&#32;should&#32;be&#32;used&#32;at&#32;this&#32;time.</emphasis>
65 <emphasis class="comment">&#32;&#32;&#32;*&#32;\param&#32;in_own&#32;This&#32;is&#32;the&#32;number&#32;of&#32;degrees&#32;of&#32;freedom&#32;that&#32;the&#32;current</emphasis>
66 <emphasis class="comment">&#32;&#32;&#32;*&#32;process&#32;has&#32;to&#32;deal&#32;with&#32;(owned).&#32;\param&#32;in_others&#32;This&#32;is&#32;the&#32;number&#32;of</emphasis>
67 <emphasis class="comment">&#32;&#32;&#32;*&#32;degrees&#32;of&#32;freedom&#32;that&#32;the&#32;process&#32;below&#32;has.&#32;Every&#32;process&#32;has&#32;to&#32;deal</emphasis>
68 <emphasis class="comment">&#32;&#32;&#32;*&#32;with&#32;one&#32;other&#32;process.&#32;The&#32;other&#32;neighbor&#32;only&#32;contacts&#32;it&#32;for&#32;a</emphasis>
69 <emphasis class="comment">&#32;&#32;&#32;*&#32;multiplication&#32;with&#32;its&#32;own&#32;matrix&#32;block&#32;-&#32;in&#32;this&#32;case,&#32;no&#32;objects&#32;of</emphasis>
70 <emphasis class="comment">&#32;&#32;&#32;*&#32;unknown&#32;size&#32;are&#32;concerned.&#32;However:&#32;for&#32;the&#32;one&#32;process&#32;that&#32;does&#32;require</emphasis>
71 <emphasis class="comment">&#32;&#32;&#32;*&#32;more&#32;contact&#32;needs&#32;a&#32;vector&#32;tp&#32;be&#32;initialized.&#32;This&#32;vectors&#32;size&#32;is&#32;this</emphasis>
72 <emphasis class="comment">&#32;&#32;&#32;*&#32;int.&#32;\param&#32;bandwidth&#32;The&#32;number&#32;of&#32;dofs&#32;per&#32;line&#32;on&#32;average&#32;is&#32;required</emphasis>
73 <emphasis class="comment">&#32;&#32;&#32;*&#32;for&#32;the&#32;construction&#32;of&#32;matrices.&#32;\param&#32;locally_owned&#32;The&#32;degrees&#32;of</emphasis>
74 <emphasis class="comment">&#32;&#32;&#32;*&#32;freedom&#32;associated&#32;with&#32;the&#32;current&#32;process.&#32;Required&#32;for&#32;vector&#32;and&#32;matrix</emphasis>
75 <emphasis class="comment">&#32;&#32;&#32;*&#32;construction.&#32;\param&#32;dampening_parameter&#32;If&#32;set&#32;to&#32;zero,&#32;no&#32;dampening&#32;is</emphasis>
76 <emphasis class="comment">&#32;&#32;&#32;*&#32;used.&#32;Otherwise,&#32;dampening&#32;according&#32;to&#32;(3.10)&#32;in&#32;the&#32;sweeping</emphasis>
77 <emphasis class="comment">&#32;&#32;&#32;*&#32;preconditioner&#32;paper&#32;is&#32;used.&#32;Thi&#32;solves&#32;the&#32;equation&#32;\f[&#32;\nabla&#32;\times</emphasis>
78 <emphasis class="comment">&#32;&#32;&#32;*&#32;\tilde{\mu}^{-1}\nabla&#32;\times&#32;\boldsymbol{E}&#32;-&#32;(\kappa&#32;+&#32;i&#32;\alpha)^2</emphasis>
79 <emphasis class="comment">&#32;&#32;&#32;*&#32;\tilde{\epsilon}\boldsymbol{E}&#32;=&#32;0&#32;\f]</emphasis>
80 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
81 &#32;&#32;<link linkend="class_preconditioner_sweeping_1a0c478ccabe57765b5a923b1ef03878af">PreconditionerSweeping</link>(MPI_Comm&#32;in_mpi_comm,&#32;<emphasis class="keywordtype">int</emphasis>&#32;in_own,&#32;<emphasis class="keywordtype">int</emphasis>&#32;in_others,
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;in_above,&#32;<emphasis class="keywordtype">int</emphasis>&#32;bandwidth,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::IndexSet&#32;locally_owned,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::IndexSet&#32;*in_fixed_dofs,&#32;<emphasis class="keywordtype">int</emphasis>&#32;rank,&#32;<emphasis class="keywordtype">bool</emphasis>&#32;fast);
85 
86 &#32;&#32;~<link linkend="class_preconditioner_sweeping">PreconditionerSweeping</link>();
87 <emphasis class="comment"></emphasis>
88 <emphasis class="comment">&#32;&#32;/**</emphasis>
89 <emphasis class="comment">&#32;&#32;&#32;*&#32;For&#32;the&#32;application&#32;of&#32;the&#32;preconditioner&#32;we&#32;require&#32;the&#32;application&#32;of&#32;the</emphasis>
90 <emphasis class="comment">&#32;&#32;&#32;*&#32;inverse&#32;of&#32;\f$H\f$.&#32;This&#32;is&#32;implemented&#32;in&#32;this&#32;function.&#32;(The&#32;mathematical</emphasis>
91 <emphasis class="comment">&#32;&#32;&#32;*&#32;usage&#32;is&#32;included&#32;in&#32;lines&#32;2,&#32;6&#32;and&#32;13&#32;and&#32;indirectly&#32;in&#32;every&#32;use&#32;of&#32;the</emphasis>
92 <emphasis class="comment">&#32;&#32;&#32;*&#32;Operator&#32;\f$S\f$.&#32;\param&#32;src&#32;This&#32;is&#32;the&#32;vector&#32;to&#32;be&#32;multiplied&#32;by</emphasis>
93 <emphasis class="comment">&#32;&#32;&#32;*&#32;\f$H_i^{-1}\f$.&#32;\param&#32;dst&#32;This&#32;is&#32;the&#32;vector&#32;to&#32;store&#32;the&#32;result&#32;in.</emphasis>
94 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
95 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_preconditioner_sweeping_1a3e8229d9aca0e61ecab03196fe16ab7f">Hinv</link>(<emphasis class="keyword">const</emphasis>&#32;dealii::Vector&lt;double&gt;&#32;&amp;src,
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::Vector&lt;double&gt;&#32;&amp;dst)&#32;<emphasis class="keyword">const</emphasis>;<emphasis class="comment"></emphasis>
97 <emphasis class="comment">&#32;&#32;/**</emphasis>
98 <emphasis class="comment">&#32;&#32;&#32;*&#32;Cases&#32;in&#32;which&#32;we&#32;require&#32;multiplications&#32;with&#32;\f$A(E_{i+1},&#32;E_i)\f$,&#32;are</emphasis>
99 <emphasis class="comment">&#32;&#32;&#32;*&#32;where&#32;this&#32;function&#32;is&#32;used.&#32;See&#32;algorithm&#32;lines&#32;2&#32;and&#32;4.&#32;\param&#32;src&#32;This</emphasis>
100 <emphasis class="comment">&#32;&#32;&#32;*&#32;is&#32;the&#32;vector&#32;to&#32;be&#32;multiplied&#32;by&#32;&#32;\f$A(E_{i+1},&#32;E_i)\f$.&#32;\param&#32;dst&#32;This</emphasis>
101 <emphasis class="comment">&#32;&#32;&#32;*&#32;is&#32;the&#32;vector&#32;to&#32;store&#32;the&#32;result&#32;in.</emphasis>
102 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
103 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_preconditioner_sweeping_1aae4ff00d6f71c0cf176172905be08cff">LowerProduct</link>(<emphasis class="keyword">const</emphasis>&#32;dealii::Vector&lt;double&gt;&#32;&amp;src,
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::Vector&lt;double&gt;&#32;&amp;dst)&#32;<emphasis class="keyword">const</emphasis>;
105 <emphasis class="comment"></emphasis>
106 <emphasis class="comment">&#32;&#32;/**</emphasis>
107 <emphasis class="comment">&#32;&#32;&#32;*&#32;Cases&#32;in&#32;which&#32;we&#32;require&#32;multiplications&#32;with&#32;\f$A(E_i,&#32;E_{i+1})\f$,&#32;are</emphasis>
108 <emphasis class="comment">&#32;&#32;&#32;*&#32;where&#32;this&#32;function&#32;is&#32;used.&#32;See&#32;algorithm&#32;lines&#32;11&#32;and&#32;13.&#32;\param&#32;src&#32;This</emphasis>
109 <emphasis class="comment">&#32;&#32;&#32;*&#32;is&#32;the&#32;vector&#32;to&#32;be&#32;multiplied&#32;by&#32;&#32;\f$A(E_i,&#32;E_{i+1})\f$.&#32;\param&#32;dst&#32;This</emphasis>
110 <emphasis class="comment">&#32;&#32;&#32;*&#32;is&#32;the&#32;vector&#32;to&#32;store&#32;the&#32;result&#32;in.</emphasis>
111 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
112 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_preconditioner_sweeping_1a7206a488cc098c6626440571011e8aa5">UpperProduct</link>(<emphasis class="keyword">const</emphasis>&#32;dealii::Vector&lt;double&gt;&#32;&amp;src,
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::Vector&lt;double&gt;&#32;&amp;dst)&#32;<emphasis class="keyword">const</emphasis>;
114 <emphasis class="comment"></emphasis>
115 <emphasis class="comment">&#32;&#32;/**</emphasis>
116 <emphasis class="comment">&#32;&#32;&#32;*&#32;In&#32;order&#32;to&#32;be&#32;called&#32;by&#32;the&#32;iterative&#32;solver,&#32;this&#32;function&#32;has&#32;to&#32;be</emphasis>
117 <emphasis class="comment">&#32;&#32;&#32;*&#32;overloaded.&#32;It&#32;gets&#32;called&#32;from&#32;GMRES&#32;and&#32;is&#32;the&#32;core&#32;function&#32;which</emphasis>
118 <emphasis class="comment">&#32;&#32;&#32;*&#32;contains&#32;the&#32;implementation.&#32;For&#32;a&#32;description&#32;of&#32;the&#32;interface,&#32;see&#32;the</emphasis>
119 <emphasis class="comment">&#32;&#32;&#32;*&#32;implementation&#32;in&#32;the&#32;base&#32;class.&#32;\param&#32;dst&#32;The&#32;vector&#32;to&#32;store&#32;the&#32;result</emphasis>
120 <emphasis class="comment">&#32;&#32;&#32;*&#32;in.&#32;\param&#32;src&#32;The&#32;vector&#32;to&#32;be&#32;multiplied&#32;by&#32;the&#32;approximate&#32;inverse.</emphasis>
121 <emphasis class="comment">&#32;&#32;&#32;*/</emphasis>
122 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_preconditioner_sweeping_1aff2e2213fb5cd62f9062d9751e41c776">vmult</link>(
123 &#32;&#32;&#32;&#32;&#32;&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;dst,
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;src)&#32;<emphasis class="keyword">const</emphasis>;
125 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_preconditioner_sweeping_1aa5ca83717ab0de29267b427de5225a53">vmult_fast</link>(
126 &#32;&#32;&#32;&#32;&#32;&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;dst,
127 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;src)&#32;<emphasis class="keyword">const</emphasis>;
128 &#32;&#32;<emphasis class="keyword">virtual</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;vmult_slow(
129 &#32;&#32;&#32;&#32;&#32;&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;dst,
130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">const</emphasis>&#32;dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;src)&#32;<emphasis class="keyword">const</emphasis>;
131 
132 &#32;&#32;dealii::TrilinosWrappers::SparseMatrix&#32;*matrix;
133 &#32;&#32;dealii::SparseMatrix&lt;double&gt;&#32;*prec_matrix_upper;
134 
135 &#32;&#32;dealii::SparseMatrix&lt;double&gt;&#32;*prec_matrix_lower;
136 
137 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;Prepare(dealii::TrilinosWrappers::MPI::BlockVector&#32;&amp;src);
138 
139 &#32;&#32;<emphasis class="keywordtype">void</emphasis>&#32;init(dealii::SolverControl&#32;in_sc,
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::TrilinosWrappers::SparseMatrix&#32;*,
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dealii::TrilinosWrappers::SparseMatrix&#32;*);
142 
143 &#32;<emphasis class="keyword">private</emphasis>:
144 &#32;&#32;<emphasis class="keywordtype">bool</emphasis>&#32;fast;
145 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;*indices;
146 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;own,&#32;others;
147 &#32;&#32;dealii::TrilinosWrappers::MPI::Vector&#32;itmp,&#32;otmp;
148 &#32;&#32;dealii::Vector&lt;double&gt;&#32;boundary;
149 &#32;&#32;<emphasis class="keywordtype">unsigned</emphasis>&#32;<emphasis class="keywordtype">int</emphasis>&#32;sweepable;
150 &#32;&#32;dealii::IndexSet&#32;locally_owned_dofs;
151 &#32;&#32;dealii::IndexSet&#32;*fixed_dofs;
152 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;rank;
153 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;bandwidth;
154 &#32;&#32;MPI_Comm&#32;mpi_comm;
155 &#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;above;
156 };
157 
158 <emphasis class="preprocessor">#endif&#32;&#32;//&#32;&#32;CODE_CORE_PRECONDITIONERSWEEPING_H_</emphasis>
    </computeroutput></literallayout>
</section>
