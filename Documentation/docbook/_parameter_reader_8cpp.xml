<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_parameter_reader_8cpp">
    <title>ParameterReader.cpp File Reference</title>
    <programlisting>#include &quot;ParameterReader.h&quot;</programlisting>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="_parameter_reader_8cpp_1a8684265c716a26333e5e9b03cfa22846">ParameterReaderCppFlag</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/kraft/workspace/waveguideproblem/Code/Helpers/ParameterReader.cpp</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#ifndef&#32;ParameterReaderCppFlag</emphasis>
2 <emphasis class="preprocessor">#define&#32;ParameterReaderCppFlag</emphasis>
3 
4 <emphasis class="preprocessor">#include&#32;&quot;ParameterReader.h&quot;</emphasis>
5 
6 <emphasis class="keyword">using&#32;namespace&#32;</emphasis><link linkend="namespacedealii">dealii</link>;
7 
<link linkend="class_parameter_reader_1aa48ec0eb9614ac9aa76b8d6146015c6b">8 </link><link linkend="class_parameter_reader_1aa48ec0eb9614ac9aa76b8d6146015c6b">ParameterReader::ParameterReader</link>(ParameterHandler&#32;&amp;prmhandler)
9 &#32;&#32;&#32;&#32;:&#32;prm(prmhandler)&#32;{}
10 
<link linkend="class_parameter_reader_1a1cb311d600af9927d6466c046b730ad5">11 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_parameter_reader_1a1cb311d600af9927d6466c046b730ad5">ParameterReader::declare_parameters</link>()&#32;{
12 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Output&quot;</emphasis>);
13 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Optimization&quot;</emphasis>);
14 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Gnuplot&quot;</emphasis>);
15 &#32;&#32;prm.declare_entry(
16 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Optimization&#32;History&#32;Live&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
17 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Currently&#32;not&#32;implemented.&#32;This&#32;will&#32;open&#32;an&#32;X-window&#32;at&#32;runtime&#32;and&#32;&quot;</emphasis>
18 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;show&#32;the&#32;current&#32;shape&#32;to&#32;allow&#32;for&#32;full&#32;tracking&#32;of&#32;the&#32;current&#32;&quot;</emphasis>
19 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;procedure&#32;while&#32;it&#32;runs&#32;(to&#32;be&#32;able&#32;to&#32;abort&#32;as&#32;early&#32;as&#32;possible.&quot;</emphasis>);
20 &#32;&#32;prm.declare_entry(
21 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Optimization&#32;History&#32;Shapes&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
22 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;value&#32;is&#32;set&#32;to&#32;&apos;true&apos;,&#32;after&#32;every&#32;step&#32;a&#32;plot&#32;and&#32;a&#32;data&#32;file&#32;&quot;</emphasis>
23 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;of&#32;the&#32;current&#32;shape&#32;will&#32;be&#32;generated.&#32;The&#32;plot&#32;shows&#32;single&#32;(tubular)&#32;&quot;</emphasis>
24 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;or&#32;multiple&#32;(rectangular)&#32;crossections&#32;of&#32;the&#32;current&#32;waveguide&#32;shape.&quot;</emphasis>);
25 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Optimization&#32;History&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;value&#32;is&#32;set&#32;to&#32;&apos;true&apos;,&#32;a&#32;plot&#32;and&#32;data&#32;file&#32;will&#32;&quot;</emphasis>
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;be&#32;generated&#32;logging&#32;the&#32;values&#32;of&#32;the&#32;signal&#32;quality&#32;&quot;</emphasis>
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;after&#32;every&#32;step&#32;of&#32;the&#32;current&#32;optimization&#32;scheme.&quot;</emphasis>);
29 &#32;&#32;prm.leave_subsection();
30 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;VTK&quot;</emphasis>);
31 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;TransformationWeights&quot;</emphasis>);
32 &#32;&#32;prm.declare_entry(
33 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;TransformationWeightsAll&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
34 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;every&#32;step&#32;logging&#32;the&#32;&quot;</emphasis>
35 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;norm&#32;of&#32;the&#32;transformation&#32;tensor&#32;as&#32;3D&#32;data.&quot;</emphasis>);
36 &#32;&#32;prm.declare_entry(
37 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;TransformationWeightsFirst&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
38 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;the&#32;first&#32;step&#32;logging&#32;&quot;</emphasis>
39 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;norm&#32;of&#32;the&#32;transformation&#32;tensor&#32;as&#32;3D&#32;data.&quot;</emphasis>);
40 &#32;&#32;prm.declare_entry(
41 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;TransformationWeightsLast&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
42 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;the&#32;last&#32;step&#32;logging&#32;&quot;</emphasis>
43 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;norm&#32;of&#32;the&#32;transformation&#32;tensor&#32;as&#32;3D&#32;data.&quot;</emphasis>);
44 &#32;&#32;prm.leave_subsection();
45 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Solution&quot;</emphasis>);
46 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SolutionAll&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;every&#32;&quot;</emphasis>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;step&#32;logging&#32;the&#32;solution&#32;as&#32;3D&#32;data.&quot;</emphasis>);
49 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SolutionFirst&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;the&#32;first&#32;&quot;</emphasis>
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;step&#32;logging&#32;the&#32;solution&#32;as&#32;3D&#32;data.&quot;</emphasis>);
52 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SolutionLast&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;.vtk&#32;file&#32;is&#32;generated&#32;in&#32;the&#32;last&#32;&quot;</emphasis>
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;step&#32;logging&#32;the&#32;solution&#32;as&#32;3D&#32;data.&quot;</emphasis>);
55 &#32;&#32;prm.leave_subsection();
56 &#32;&#32;prm.leave_subsection();
57 &#32;&#32;prm.leave_subsection();
58 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Convergence&quot;</emphasis>);
59 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;DataFiles&quot;</emphasis>);
60 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceFirst&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;datafile&#32;with&#32;the&#32;data&#32;&quot;</emphasis>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;of&#32;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;the&#32;first&#32;step.&quot;</emphasis>);
63 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceLast&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;datafile&#32;with&#32;the&#32;data&#32;&quot;</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;of&#32;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;the&#32;last&#32;step.&quot;</emphasis>);
66 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceAll&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;datafile&#32;with&#32;the&#32;data&#32;&quot;</emphasis>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;of&#32;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;all&#32;steps.&quot;</emphasis>);
69 &#32;&#32;prm.leave_subsection();
70 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Plots&quot;</emphasis>);
71 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceFirst&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;plot&#32;of&#32;the&#32;data&#32;of&#32;&quot;</emphasis>
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;the&#32;first&#32;step.&quot;</emphasis>);
74 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceLast&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;plot&#32;of&#32;the&#32;data&#32;of&#32;&quot;</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;the&#32;last&#32;step.&quot;</emphasis>);
77 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ConvergenceAll&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;causes&#32;the&#32;code&#32;to&#32;generate&#32;a&#32;plot&#32;of&#32;the&#32;data&#32;of&#32;&quot;</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;system&#32;matrix&#32;solution&#32;process&#32;of&#32;all&#32;steps.&quot;</emphasis>);
80 &#32;&#32;prm.leave_subsection();
81 &#32;&#32;prm.leave_subsection();
82 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;General&quot;</emphasis>);
83 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SummaryFile&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;generates&#32;an&#32;output&#32;of&#32;the&#32;simulation&#32;(mathematical&#32;&quot;</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;terms.&#32;Convergence&#32;rates,&#32;residuals,&#32;parameters&#32;etc.)&quot;</emphasis>);
86 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;LogFile&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;This&#32;generates&#32;a&#32;general&#32;log&#32;(Code&#32;steps,&#32;warnings,&#32;&quot;</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;errors,&#32;diagnostics)&quot;</emphasis>);
89 &#32;&#32;prm.leave_subsection();
90 &#32;&#32;prm.leave_subsection();
91 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Measures&quot;</emphasis>);
92 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;PredefinedCases&quot;</emphasis>);
93 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ComputeCase&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Do&#32;you&#32;want&#32;to&#32;compute&#32;a&#32;predefined&#32;case?&quot;</emphasis>);
95 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SelectCase&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;0&quot;</emphasis>,&#32;Patterns::Integer(0,&#32;72),
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Which&#32;Case&#32;to&#32;compute&#32;(see&#32;numbers&#32;in&#32;hdf5&#32;files).&quot;</emphasis>);
97 &#32;&#32;prm.leave_subsection();
98 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Connectors&quot;</emphasis>);
99 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Shape&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Circle&quot;</emphasis>,&#32;Patterns::Selection(<emphasis class="stringliteral">&quot;Circle|Rectangle&quot;</emphasis>),
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Describes&#32;the&#32;shape&#32;of&#32;the&#32;input&#32;connector.&quot;</emphasis>);
101 &#32;&#32;prm.declare_entry(
102 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dimension1&#32;In&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.0&quot;</emphasis>,&#32;Patterns::Double(0),
103 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;First&#32;dimension&#32;of&#32;the&#32;input&#32;connector.&#32;For&#32;a&#32;circular&#32;waveguide&#32;this&#32;&quot;</emphasis>
104 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;is&#32;the&#32;radius.&#32;For&#32;a&#32;rectangular&#32;waveguide&#32;this&#32;is&#32;the&#32;width.&quot;</emphasis>);
105 &#32;&#32;prm.declare_entry(
106 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dimension2&#32;In&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.0&quot;</emphasis>,&#32;Patterns::Double(0),
107 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Second&#32;dimension&#32;of&#32;the&#32;input&#32;connector.&#32;For&#32;a&#32;circular&#32;waveguide&#32;this&#32;&quot;</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;has&#32;no&#32;meaning.&#32;For&#32;a&#32;rectangular&#32;waveguide&#32;this&#32;is&#32;the&#32;height.&quot;</emphasis>);
109 &#32;&#32;prm.declare_entry(
110 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dimension1&#32;Out&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.0&quot;</emphasis>,&#32;Patterns::Double(0),
111 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;First&#32;dimension&#32;of&#32;the&#32;output&#32;connector.&#32;For&#32;a&#32;circular&#32;waveguide&#32;this&#32;&quot;</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;is&#32;the&#32;radius.&#32;For&#32;a&#32;rectangular&#32;waveguide&#32;this&#32;is&#32;the&#32;width.&quot;</emphasis>);
113 &#32;&#32;prm.declare_entry(
114 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dimension2&#32;Out&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.0&quot;</emphasis>,&#32;Patterns::Double(0),
115 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Second&#32;dimension&#32;of&#32;the&#32;output&#32;connector.&#32;For&#32;a&#32;circular&#32;waveguide&#32;this&#32;&quot;</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;has&#32;no&#32;meaning.&#32;For&#32;a&#32;rectangular&#32;waveguide&#32;this&#32;is&#32;the&#32;height.&quot;</emphasis>);
117 &#32;&#32;prm.leave_subsection();
118 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Region&quot;</emphasis>);
119 &#32;&#32;prm.declare_entry(
120 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;XLength&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
121 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Length&#32;of&#32;the&#32;system&#32;in&#32;x-Direction&#32;(Connectors&#32;lie&#32;in&#32;the&#32;XY-plane&#32;and&#32;&quot;</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;offset&#32;lies&#32;in&#32;the&#32;y-direction.&#32;Measured&#32;in&#32;micrometres&quot;</emphasis>);
123 &#32;&#32;prm.declare_entry(
124 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;YLength&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
125 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Length&#32;of&#32;the&#32;system&#32;in&#32;y-Direction&#32;(Connectors&#32;lie&#32;in&#32;the&#32;XY-plane&#32;and&#32;&quot;</emphasis>
126 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;offset&#32;lies&#32;in&#32;the&#32;y-direction.&#32;Measured&#32;in&#32;micrometres&quot;</emphasis>);
127 &#32;&#32;prm.declare_entry(
128 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;ZLength&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;6.0&quot;</emphasis>,&#32;Patterns::Double(0),
129 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Length&#32;of&#32;the&#32;system&#32;in&#32;z-Direction&#32;(Connectors&#32;lie&#32;in&#32;the&#32;XY-plane&#32;and&#32;&quot;</emphasis>
130 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;the&#32;offset&#32;lies&#32;in&#32;the&#32;y-direction.&#32;Measured&#32;in&#32;micrometres&quot;</emphasis>);
131 &#32;&#32;prm.leave_subsection();
132 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Waveguide&quot;</emphasis>);
133 &#32;&#32;prm.declare_entry(
134 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Delta&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.0&quot;</emphasis>,&#32;Patterns::Double(0),
135 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Offset&#32;between&#32;the&#32;two&#32;connectors&#32;measured&#32;in&#32;micrometres.&quot;</emphasis>);
136 &#32;&#32;prm.declare_entry(
137 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;epsilon&#32;in&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.21&quot;</emphasis>,&#32;Patterns::Double(0),
138 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Material-Property&#32;of&#32;the&#32;optical&#32;fiber&#32;(optical&#32;thickness).&quot;</emphasis>);
139 &#32;&#32;prm.declare_entry(
140 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;epsilon&#32;out&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2.2&quot;</emphasis>,&#32;Patterns::Double(0),
141 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Material-Property&#32;of&#32;environment&#32;of&#32;the&#32;fiber&#32;(optical&#32;thickness).&quot;</emphasis>);
142 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Lambda&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;5.6328&quot;</emphasis>,&#32;Patterns::Double(0),
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Vacuum-wavelength&#32;of&#32;the&#32;incoming&#32;wave.&quot;</emphasis>);
144 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Sectors&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;2&quot;</emphasis>,&#32;Patterns::Integer(1),
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Number&#32;of&#32;Sectors&#32;used&#32;for&#32;Modelling&#32;of&#32;the&#32;Waveguide.&quot;</emphasis>);
146 &#32;&#32;prm.leave_subsection();
147 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Boundary&#32;Conditions&quot;</emphasis>);
148 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Type&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;PML&quot;</emphasis>,&#32;Patterns::Selection(<emphasis class="stringliteral">&quot;PML|HSIE&quot;</emphasis>),
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;The&#32;way&#32;the&#32;output-connector&#32;is&#32;modeled.&#32;HSIE&#32;uses&#32;the&#32;&quot;</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Hardy-space&#32;infinite&#32;element&#32;for&#32;setting&#32;boundary&#32;&quot;</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;conditions&#32;but&#32;isn&apos;t&#32;implemented&#32;yet.&quot;</emphasis>);
152 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;ZMinus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;5&quot;</emphasis>,&#32;Patterns::Double(0),
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;additional&#32;range&#32;on&#32;the&#32;negative&#32;z&#32;axis&#32;&quot;</emphasis>
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;for&#32;better&#32;wave&#32;coupling&quot;</emphasis>);
155 &#32;&#32;prm.declare_entry(
156 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;ZPlus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1&quot;</emphasis>,&#32;Patterns::Double(0),
157 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;PML&#32;area&#32;on&#32;the&#32;side&#32;of&#32;the&#32;output&#32;connector.&quot;</emphasis>);
158 &#32;&#32;prm.declare_entry(
159 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;XMinus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.0&quot;</emphasis>,&#32;Patterns::Double(0),
160 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;PML&#32;on&#32;the&#32;negative&#32;X-axis.&#32;Measured&#32;in&#32;micrometers&quot;</emphasis>);
161 &#32;&#32;prm.declare_entry(
162 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;XPlus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.0&quot;</emphasis>,&#32;Patterns::Double(0),
163 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;PML&#32;on&#32;the&#32;positive&#32;X-axis.&#32;Measured&#32;in&#32;micrometers&quot;</emphasis>);
164 &#32;&#32;prm.declare_entry(
165 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;YMinus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.0&quot;</emphasis>,&#32;Patterns::Double(0),
166 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;PML&#32;on&#32;the&#32;negative&#32;Y-axis.&#32;Measured&#32;in&#32;micrometers&quot;</emphasis>);
167 &#32;&#32;prm.declare_entry(
168 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;YPlus&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.0&quot;</emphasis>,&#32;Patterns::Double(0),
169 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Thickness&#32;of&#32;the&#32;PML&#32;on&#32;the&#32;positive&#32;Y-axis.&#32;Measured&#32;in&#32;micrometers&quot;</emphasis>);
170 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;KappaXMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
172 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;KappaYMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
174 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;KappaZMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
176 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SigmaXMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
178 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SigmaYMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
180 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SigmaZMax&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10.0&quot;</emphasis>,&#32;Patterns::Double(0),
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;PML&#32;Tuning&#32;Parameter&quot;</emphasis>);
182 &#32;&#32;prm.declare_entry(
183 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;DampeningExponentM&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;3&quot;</emphasis>,&#32;Patterns::Integer(3),
184 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dampening&#32;Exponent&#32;M&#32;for&#32;the&#32;intensety&#32;of&#32;dampening&#32;in&#32;the&#32;PML&#32;region.&quot;</emphasis>);
185 &#32;&#32;prm.leave_subsection();
186 &#32;&#32;prm.leave_subsection();
187 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Schema&quot;</emphasis>);
188 &#32;&#32;prm.declare_entry(
189 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Homogeneity&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;false&quot;</emphasis>,&#32;Patterns::Bool(),
190 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;enabled,&#32;a&#32;space&#32;transformation&#32;is&#32;used&#32;which&#32;is&#32;equal&#32;the&#32;&quot;</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;identity&#32;on&#32;the&#32;PML-region&#32;for&#32;the&#32;dampening&#32;along&#32;the&#32;x&#32;and&#32;y&#32;axis.&quot;</emphasis>);
192 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Optimization&#32;Schema&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Adjoint&quot;</emphasis>,
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Patterns::Selection(<emphasis class="stringliteral">&quot;Adjoint|FD&quot;</emphasis>),
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;set&#32;to&#32;adjoint,&#32;the&#32;shape&#32;gradient&#32;will&#32;be&#32;&quot;</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;computed&#32;by&#32;means&#32;of&#32;an&#32;adjoint&#32;based&#32;method.&#32;If&#32;it&#32;is&#32;&quot;</emphasis>
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;set&#32;to&#32;FD,&#32;finite&#32;differences&#32;are&#32;use.&quot;</emphasis>);
197 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Optimization&#32;Steps&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;10&quot;</emphasis>,&#32;Patterns::Integer(1),
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Number&#32;of&#32;Optimization&#32;steps&#32;to&#32;be&#32;performed.&quot;</emphasis>);
199 &#32;&#32;prm.declare_entry(
200 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Stepping&#32;Method&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Steepest&quot;</emphasis>,
201 &#32;&#32;&#32;&#32;&#32;&#32;Patterns::Selection(<emphasis class="stringliteral">&quot;Steepest|CG|LineSearch&quot;</emphasis>),
202 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Method&#32;of&#32;step&#32;computation.&#32;Steepest&#32;uses&#32;steepest&#32;descent.&#32;CG&#32;uses&#32;a&#32;&quot;</emphasis>
203 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;conjugate&#32;gradient&#32;method&#32;to&#32;compute&#32;the&#32;next&#32;step.&#32;Line&#32;Search&#32;only&#32;&quot;</emphasis>
204 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;works&#32;based&#32;on&#32;an&#32;adjoint&#32;optimization&#32;setting,&#32;where&#32;searches&#32;can&#32;be&#32;&quot;</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;performed&#32;cheaply.&quot;</emphasis>);
206 &#32;&#32;<emphasis class="comment">//&#32;prm.declare_entry(&quot;Step&#32;Width&quot;,&#32;&quot;Adjoint&quot;,</emphasis>
207 &#32;&#32;<emphasis class="comment">//&#32;Patterns::Selection(&quot;Adjoint|Experimental&quot;),&#32;&quot;This&#32;parameter&#32;descibes&#32;the</emphasis>
208 &#32;&#32;<emphasis class="comment">//&#32;scheme&#32;used&#32;to&#32;compute&#32;the&#32;next&#32;step&#32;width.&#32;This&#32;can&#32;be&#32;adjoint&#32;(if&#32;an</emphasis>
209 &#32;&#32;<emphasis class="comment">//&#32;adjoint&#32;schema&#32;is&#32;used,&#32;which&#32;causees&#32;the&#32;computation&#32;of&#32;multiple&#32;shape</emphasis>
210 &#32;&#32;<emphasis class="comment">//&#32;hradient&#32;with&#32;differing&#32;step&#32;widths&#32;in&#32;the&#32;parameters.&#32;This&#32;would&#32;be&#32;too</emphasis>
211 &#32;&#32;<emphasis class="comment">//&#32;costly&#32;for&#32;FD&#32;and&#32;ist&#32;therefore&#32;not&#32;available&#32;in&#32;that&#32;mode.&#32;An&#32;experimental</emphasis>
212 &#32;&#32;<emphasis class="comment">//&#32;approach&#32;can&#32;be&#32;used&#32;which&#32;tries&#32;to&#32;use&#32;information&#32;from&#32;the&#32;gradient&#32;and&#32;a</emphasis>
213 &#32;&#32;<emphasis class="comment">//&#32;seperate&#32;step&#32;width&#32;control&#32;to&#32;compute&#32;the&#32;step.&#32;&quot;);</emphasis>
214 &#32;&#32;prm.leave_subsection();
215 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Solver&quot;</emphasis>);
216 &#32;&#32;prm.declare_entry(
217 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Solver&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;GMRES&quot;</emphasis>,&#32;Patterns::Selection(<emphasis class="stringliteral">&quot;GMRES|UMFPACK|MINRES&quot;</emphasis>),
218 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Which&#32;Solver&#32;to&#32;use&#32;for&#32;the&#32;solution&#32;of&#32;the&#32;system&#32;matrix&quot;</emphasis>);
219 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;GMRESSteps&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;30&quot;</emphasis>,&#32;Patterns::Integer(1),
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Steps&#32;until&#32;restart&#32;of&#32;Krylow&#32;subspace&#32;generation&quot;</emphasis>);
221 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Preconditioner&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;Sweeping&quot;</emphasis>,
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Patterns::Selection(
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Sweeping|FastSweeping|HSIESweeping|HSIEFastSweeping&quot;</emphasis>),
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Which&#32;preconditioner&#32;to&#32;use&quot;</emphasis>);
225 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;PreconditionerDampening&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;0.0&quot;</emphasis>,&#32;Patterns::Double(0),
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Dampening&#32;for&#32;the&#32;preconditioner&#32;to&#32;acclelerate&#32;&quot;</emphasis>
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;convergence.&#32;Typically&#32;0&#32;(off)&#32;or&#32;1.0&quot;</emphasis>);
228 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Steps&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;30&quot;</emphasis>,&#32;Patterns::Integer(1),
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Number&#32;of&#32;Steps&#32;the&#32;Solver&#32;is&#32;supposed&#32;to&#32;do.&quot;</emphasis>);
230 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Precision&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1e-6&quot;</emphasis>,&#32;Patterns::Double(0),
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Minimal&#32;error&#32;value,&#32;the&#32;solver&#32;is&#32;supposed&#32;to&#32;accept&#32;as&#32;&quot;</emphasis>
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;correct&#32;solution.&quot;</emphasis>);
233 &#32;&#32;prm.leave_subsection();
234 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Constants&quot;</emphasis>);
235 &#32;&#32;prm.declare_entry(
236 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;AllOne&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;true&quot;</emphasis>,&#32;Patterns::Bool(),
237 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;If&#32;this&#32;is&#32;set&#32;to&#32;true,&#32;EpsilonZero&#32;and&#32;MuZero&#32;are&#32;set&#32;to&#32;1.&quot;</emphasis>);
238 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;EpsilonZero&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;8.854e-18&quot;</emphasis>,&#32;Patterns::Double(0),
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Physical&#32;constant&#32;Epsilon&#32;zero.&#32;The&#32;standard&#32;value&#32;is&#32;&quot;</emphasis>
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;measured&#32;in&#32;micrometers.&quot;</emphasis>);
241 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;MuZero&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1.257e-12&quot;</emphasis>,&#32;Patterns::Double(0),
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Physical&#32;constant&#32;Mu&#32;zero.&#32;The&#32;standard&#32;value&#32;is&#32;measured&#32;&quot;</emphasis>
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;in&#32;micrometers.&quot;</emphasis>);
244 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Pi&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;3.14159265&quot;</emphasis>,&#32;Patterns::Double(0),
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Mathematical&#32;constant&#32;Pi.&quot;</emphasis>);
246 &#32;&#32;prm.leave_subsection();
247 &#32;&#32;prm.enter_subsection(<emphasis class="stringliteral">&quot;Refinement&quot;</emphasis>);
248 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Global&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1&quot;</emphasis>,&#32;Patterns::Integer(0),
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Global&#32;refinement-steps.&quot;</emphasis>);
250 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;SemiGlobal&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1&quot;</emphasis>,&#32;Patterns::Integer(0),
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Semi-Global&#32;refinement-steps&#32;(close&#32;to&#32;the&#32;&quot;</emphasis>
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Waveguide-boundary&#32;and&#32;inside).&quot;</emphasis>);
253 &#32;&#32;prm.declare_entry(<emphasis class="stringliteral">&quot;Internal&quot;</emphasis>,&#32;<emphasis class="stringliteral">&quot;1&quot;</emphasis>,&#32;Patterns::Integer(0),
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="stringliteral">&quot;Internal&#32;refinement-steps.&quot;</emphasis>);
255 &#32;&#32;prm.leave_subsection();
256 }
257 
<link linkend="class_parameter_reader_1ab9462a51546741d97e9dbca7d3dee7a2">258 </link><emphasis class="keywordtype">void</emphasis>&#32;<link linkend="class_parameter_reader_1ab9462a51546741d97e9dbca7d3dee7a2">ParameterReader::read_parameters</link>(<emphasis class="keyword">const</emphasis>&#32;std::string&#32;inputfile)&#32;{
259 &#32;&#32;<link linkend="class_parameter_reader_1a1cb311d600af9927d6466c046b730ad5">declare_parameters</link>();
260 &#32;&#32;std::ifstream&#32;ifile(inputfile,&#32;std::ifstream::in);
261 &#32;&#32;prm.parse_input_from_xml(ifile);
262 }
263 
264 <emphasis class="preprocessor">#endif</emphasis>
    </computeroutput></literallayout>
</section>
